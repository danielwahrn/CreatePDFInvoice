{"version":3,"sources":["assets/utils/images/originals/citynights.jpg","assets/utils/images/company/11.jpg","assets/utils/images/bg.jpg","Api.js","components/FileInput.jsx","container/ContractorPage/index.js","container/DocketsPage/index.js","container/TasksPage/index.js","container/HistoryPage/index.js","container/InformationPage/index.js","routes/PagesRoutes.js","Layout/AppHeader/Components/UserBox.js","Layout/AppLogo/index.js","Layout/AppHeader/actions.js","Layout/AppHeader/index.js","Layout/AppNav/NavItems.js","Layout/AppNav/VerticalNavWrapper.js","Layout/AppSidebar/index.js","container/AppContainer/AppContainer.jsx","container/index.js","Layout/WelcomeHeader/index.js","container/WelcomePage/index.js","container/Auth/InvitePage.jsx","container/Auth/constants.js","container/Auth/actions.js","container/Auth/LoginPage.jsx","container/Auth/RegisterPage.jsx","container/TaskPage/index.js","container/CompanyRegister/InstructionPage.jsx","container/CompanyRegister/LoadDataPage.jsx","routes/PrivateRoute.js","routes/InviteRoute.js","container/404/index.js","routes/MainRoutes.js","App.js","container/Auth/reducers/authentication.reducer.js","helpers/reducer.js","container/Auth/reducers/registration.reducer.js","helpers/store.js","index.js"],"names":["module","exports","__webpack_require__","p","base_url","getCurrentUser","userdata","window","localStorage","getItem","undefined","console","log","JSON","parse","this","props","history","push","removeUser","removeItem","logout","Api","apiFetch","url","params","arguments","length","headers","Promise","resolve","reject","fetch","concat","then","res","json","data","error","catch","apiFetchStream","blob","isAdmin","role","saveUser","setItem","stringify","saveToken","getToken","FileInput","styled","div","_templateObject","components_FileInput","_ref","setData","api","react_default","a","createElement","type","onChange","e","formData","FormData","reader","FileReader","file","target","files","text","onloadend","result","split","append","option","method","Content-Type","body","status","alert","readAsDataURL","ContractorPage","_this","Object","classCallCheck","_super","call","addContractor","_this$state","state","contractor","generatePassword","setState","submitted","objectSpread","defineProperty","firstname","lastname","username","email","phone","password","indexOf","misPhone","content-type","addToggle","contractorlist","editContractor","selectedContractor","editToggle","deleteContractor","deleteToggle","onDocumentLoadSuccess","numPages","loadText","contractorList","location","reload","loadURL","taskModal","inviteModal","addModal","editModal","deleteModal","pageNumber","searchText","id","jobsite","confirm","taskToggle","bind","assertThisInitialized","storeTask","inviteToggle","onHandleChange","onUpdateHandleChange","_this2","header","temp","filter","_id","generate","numbers","_this3","response","Blob","URL","createObjectURL","doc","_this4","_this5","saveSync","_e$target","name","value","_e$target2","_this6","_this$state2","columns","Header","width","accessor","row","CustomInput","label","Button","outline","className","color","onClick","showInviteModal","d","showEditContractorModal","showDeleteConfirmModal","react","Row","Col","md","Card","CardHeader","showAddContractorModal","style","marginRight","export2Text","CardBody","react_table_es","defaultPageSize","Modal","isOpen","toggle","ModalHeader","ModalBody","Form","FormGroup","Input","display","Label","readOnly","ModalFooter","sendInvite","placeholder","React","Component","connectedContractorPage","connect","loggedIn","authentication","DocketsPage","clear","sigPad","clear1","sigPad1","trim","asyncToGenerator","regenerator_default","mark","_callee","index","pdf","trimmedDataURL","trimmedDataURL1","pdfDoc","pngImage","pngDims","pages","pngImage1","pngDims1","pdfBytes","wrap","_context","prev","next","signing","getTrimmedCanvas","toDataURL","PDFDocument","load","sent","embedPng","scale","signed1","getPages","forEach","page","drawImage","x","y","height","signed2","saveAsBase64","dataUri","stop","_x","apply","selectedDocket","docketList","viewModal","approveModal","rejectModal","sendModal","manageremail","viewToggle","approveToggle","rejectToggle","sendToggle","doApprove","doReject","doSend","doDelete","handleChange","API","docket","path","message","blob2arraybuffer","_this7","arrayBuffer","removeBase64Mark","requestOptions","docketid","_this8","_this9","justifyContent","showDocketViewModal","saveAsFile","maxWidth","src","margin","frameBorder","title","build_default","penColor","ref","onEnd","canvasProps","handleManagerEmailChange","marginTop","uploadDoc","disabled","connectedDocketsPage","loggingIn","TasksPage","taskList","deleteTask","selectedTask","editTask","newTask","newToggle","task","code","description","newModal","selectedUser","showEditTaskModal","showAddTaskModal","connectedTasksPage","HistoryPage","selectedHistory","selectedWork","historyList","currentHistory","start","moment","Date","format","end","hour","event","dropdownOpen","paddingLeft","paddingRight","deleteHistory","connectedHistoryPage","InformationPage","Fragment","textAlign","connectedInformationPage","PagesRoutes","Switch","Route","component","UserBox","user","UncontrolledButtonDropdown","DropdownToggle","react_fontawesome_index_es","icon","faAngleDown","DropdownMenu","right","HeaderLogo","openLeft","openRight","relativeWidth","noTouchOpen","noTouchClose","active","mobile","activeSecondaryMenuMobile","dispatch","actions","userConstants","LOGOUT","AppLogo","Components_UserBox","MainNav","to","Nav","lib_default","content","activeLinkFromLocation","iconNamePrefix","classNameStateIcon","pathname","startsWith","withRouter","AppSidebar","toggleMobileSidebar","_this$props","enableMobileMenu","setEnableMobileMenu","VerticalNavWrapper","AppContainer","AppHeader","Layout_AppSidebar","children","Pages","container_AppContainer_AppContainer","WelcomeHeader","login","WelcomePages","Layout_WelcomeHeader","background","connectedWelcomePages","InvitePage","handleSubmit","preventDefault","lg","sm","onSubmit","form","required","for","size","block","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE","request","success","token","register","LoginPage","Link","bg3","RegisterPage","repeatpassword","validation","checkpassword","_event$target","eamil","float","TaskPage","makeblob","dataURL","parts","contentType","raw","decodeURIComponent","rawLength","atob","uInt8Array","Uint8Array","i","charCodeAt","editWork","workList","deleteWork","signed","selectedStartTime","selectedEndTime","selectedLunchTime","currentTask","lunchTime","lunch","lunchhour","tasktemp","onHandleLunchChange","onHandleWorkChange","option1","time","_objectSpread3","hrs","Math","floor","diff","_objectSpread4","_e$target3","_this$state3","_this$state4","_this$state5","userid","work","_this$state6","react_select_browser_esm","options","react_datepicker_min_default","selected","onHandleStartTimeChange","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","dateFormat","onHandleEndTimeChange","notes","saveTask","onHandleLunchTimeChange","mask","saveLunch","showSendConfirmModal","starttime","endtime","lunchtime","loadPDF","connectedTaskPage","Box","InstructionPage_templateObject","InstructionPage","minHeight","bg1","InputBox","LoadDataPage_templateObject","_templateObject2","LoadDataPage","LoadDataPage_Box","PrivateRoute","rest","objectWithoutProperties","assign","render","Redirect","from","InviteRoute","EmptyPage","MainRoutes","exact","WelcomePage","routes_PrivateRoute","routes_InviteRoute","App","BrowserRouter","initialState","rootReducer","combineReducers","action","registration","registering","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.96c9a848.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/citynights.94cc27a5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/11.ca5d7056.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg.f90e631d.jpg\";","const base_url = '/api';\r\n\r\nfunction apiFetch(url, params = {}) {\r\n    params.headers = params.headers ? params.headers : {};\r\n    //params.headers.Authorization = `JWT ${getToken()}`;\r\n  \r\n    return new Promise((resolve, reject) => {\r\n      fetch(`${base_url}${url}`, params)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.error) {\r\n                reject();\r\n                logout()\r\n            }\r\n            resolve(data);\r\n        })\r\n        .catch(error => {\r\n            reject(error)\r\n        });\r\n    });\r\n}\r\n\r\nfunction apiFetchStream(url, params = {}) {\r\n    params.headers = params.headers ? params.headers : {};\r\n    //params.headers.Authorization = `JWT ${getToken()}`;\r\n  \r\n    return new Promise((resolve, reject) => {\r\n      fetch(`${base_url}${url}`, params)\r\n        .then(res => res.blob())\r\n        .then(data => {\r\n            if(data.error) {\r\n                console.log(data.error)\r\n                reject();\r\n                logout()\r\n            }\r\n            resolve(data);\r\n        });\r\n    });\r\n}\r\n\r\nfunction getToken() {\r\n    return window.localStorage.getItem(\"user_token\");\r\n}\r\n\r\nfunction saveToken() {\r\n    return window.localStorage.getItem(\"user_token\");\r\n}\r\n\r\nfunction getCurrentUser() {\r\n    const userdata = window.localStorage.getItem(\"user\");\r\n    if(userdata === undefined) {\r\n        this.props.history.push('/')\r\n        return;\r\n    }\r\n    console.log(\"user\", userdata)\r\n    return userdata !== undefined ? JSON.parse(userdata) : null;\r\n}\r\n\r\nfunction isAdmin() {\r\n    return getCurrentUser() && getCurrentUser().role === 'admin';\r\n}\r\n\r\nfunction saveUser(data) {\r\n    localStorage.setItem('user', JSON.stringify(data));\r\n}\r\n\r\nfunction removeUser() {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('user_token');\r\n}\r\n\r\nfunction logout() {\r\n    removeUser();\r\n    //window.location.reload();\r\n}\r\n\r\n\r\nexport default {\r\n    apiFetch,\r\n    apiFetchStream,\r\n    logout,\r\n    isAdmin,\r\n    saveUser,\r\n    removeUser,\r\n    saveToken,\r\n    getToken,\r\n    getCurrentUser\r\n};","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Api from '../Api'\r\n\r\nconst FileInput = styled.div`\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n`;\r\n\r\nexport default ({setData, api}) => {\r\n    \r\n    const loadText = (e) => {\r\n        const formData = new FormData();\r\n\r\n        const reader = new FileReader();\r\n        const file = e.target.files[0];\r\n        var text = null;\r\n        reader.onloadend = () => {\r\n            text = reader.result\r\n\r\n            text = text.split(',')\r\n            text = text[1]\r\n\r\n            formData.append('file', text)\r\n\r\n            const option = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({text})\r\n            }\r\n    \r\n            Api.apiFetch(api, option)\r\n            .then(data => {\r\n                if(data.status) {\r\n                    alert('Load successfully');\r\n                    setData(data.result);\r\n                }\r\n                else alert('Load faild');\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n        }\r\n\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n    return(\r\n        <FileInput>\r\n            <input type=\"file\" onChange={loadText} />\r\n        </FileInput>\r\n    )\r\n}","import React, {Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {generate} from 'generate-password'\r\n\r\nimport {Col, Row, Card, CardBody, Button, CustomInput, CardHeader, Modal, ModalHeader, ModalFooter, ModalBody, FormGroup, Input,  Form, Label} from 'reactstrap';\r\nimport ReactTable from \"react-table\";\r\nimport { saveSync } from 'save-file';\r\n\r\nimport 'react-pdf/dist/Page/AnnotationLayer.css';\r\nimport FileInput from '../../components/FileInput'\r\n\r\nimport Api from '../../Api';\r\n\r\nclass ContractorPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loadURL: '',\r\n            selectedContractor: [],\r\n            taskModal: false,\r\n            inviteModal: false,\r\n            addModal: false,\r\n            editModal: false,\r\n            deleteModal: false,\r\n            numPages: null, \r\n            pageNumber: 1,\r\n            searchText:'document',\r\n            contractorlist: [],\r\n            contractor: {\r\n                id:-1,\r\n                firstname: '',\r\n                lastname: '',\r\n                username: '',\r\n                jobsite: '',\r\n                password: '',\r\n                confirm: '',\r\n                email: '',\r\n                phone: ''\r\n            },\r\n            submitted: false,\r\n            misPhone: false,\r\n            generatePassword: '',\r\n        };\r\n\r\n        this.taskToggle = this.taskToggle.bind(this)\r\n        this.storeTask = this.storeTask.bind(this)\r\n        this.inviteToggle = this.inviteToggle.bind(this)\r\n        this.addToggle = this.addToggle.bind(this)\r\n        this.editToggle = this.editToggle.bind(this)\r\n        this.deleteToggle = this.deleteToggle.bind(this)\r\n        this.onHandleChange = this.onHandleChange.bind(this)\r\n        this.onUpdateHandleChange = this.onUpdateHandleChange.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        const option = {\r\n            method: \"GET\",\r\n            header: {\r\n                \"content-type\":\"application/json\"\r\n            }\r\n        }\r\n\r\n        Api.apiFetch(\"/admin/getcontractors\", option)\r\n        .then(data => {\r\n            if(data.status) {\r\n                //\r\n                this.setState({contractorlist: data.result})\r\n            }\r\n            else {\r\n                alert('load faild')\r\n            }\r\n        })\r\n        .catch(error =>{\r\n            //alert('load call faild')\r\n            console.log('getcontractorlisterror', error)\r\n        })\r\n    }\r\n\r\n    showInviteModal(id) {\r\n        const temp = this.state.contractorlist.filter(contractor => contractor._id === id)\r\n        this.setState({selectedContractor: temp[0]})\r\n        this.setState({inviteModal: true})\r\n\r\n       // this.loadPDF();\r\n    }\r\n\r\n    showAddContractorModal() {\r\n        var password = generate({\r\n            length: 10,\r\n            numbers: true\r\n        });\r\n        \r\n        \r\n        // this.setState({contractor:{\r\n        //     ...contractor,\r\n        //     [password]: password\r\n        // }})\r\n        // this.forceUpdate()\r\n\r\n        this.setState({generatePassword: password})\r\n        \r\n        this.setState({addModal: true})\r\n    }\r\n\r\n    showEditContractorModal(id) {\r\n        const temp = this.state.contractorlist.filter(contractor => contractor._id === id)\r\n        this.setState({selectedContractor: temp[0]})\r\n        this.setState({editModal: true})\r\n    }\r\n    \r\n    showDeleteConfirmModal(id) {\r\n        const temp = this.state.contractorlist.filter(contractor => contractor._id === id)\r\n        this.setState({selectedContractor: temp[0]})\r\n        this.setState({deleteModal: true})\r\n    }\r\n\r\n    taskToggle() {\r\n        this.setState({\r\n            taskModal: !this.state.taskModal\r\n        });\r\n    }\r\n\r\n    inviteToggle() {\r\n        this.setState({\r\n            inviteModal: !this.state.inviteModal\r\n        });\r\n    }\r\n\r\n    addToggle() {\r\n        this.setState({\r\n            addModal: !this.state.addModal\r\n        });\r\n    }\r\n\r\n    editToggle() {\r\n        this.setState({\r\n            editModal: !this.state.editModal\r\n        });\r\n    }\r\n\r\n    deleteToggle() {\r\n        this.setState({\r\n            deleteModal: !this.state.deleteModal\r\n        });\r\n    }\r\n\r\n    addContractor = () => {\r\n        const {contractor, generatePassword} = this.state;\r\n        this.setState({submitted: true})\r\n\r\n        this.setState({contractor:{\r\n            ...contractor,\r\n            ['password']: generatePassword\r\n        }})\r\n\r\n        if(contractor.firstname !== '' &&  contractor.lastname !== '' && contractor.username !== '' && contractor.email !== '' && contractor.phone !== '' && contractor.password !== '') {\r\n            if(contractor.phone.indexOf('+') < 0){\r\n                this.setState({misPhone: true})\r\n                return;\r\n            }\r\n            const option = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"content-type\":\"application/json\"\r\n                },\r\n                body: JSON.stringify({...contractor})\r\n            }\r\n\r\n            Api.apiFetch(\"/admin/addcontractor\", option)\r\n            .then(data => {\r\n                if (data.status) {\r\n                    this.addToggle()\r\n                    this.setState({contractorlist: data.result})\r\n                }\r\n                else {\r\n                    alert(data.result)\r\n                }\r\n            })\r\n            .catch(error =>{})\r\n        }\r\n    }\r\n\r\n    editContractor =() => {\r\n        const {selectedContractor} = this.state;\r\n        this.setState({submitted: true})\r\n        if(selectedContractor.firstname !== '' &&  selectedContractor.lastname !== '' && selectedContractor.username !== '' && selectedContractor.email !== '' && selectedContractor.phone !== '' && selectedContractor.password !== '') {\r\n\r\n            if(selectedContractor.phone.indexOf('+') < 0)\r\n            {\r\n                this.setState({misPhone: true})\r\n                return;\r\n            }\r\n\r\n            const option = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"content-type\":\"application/json\"\r\n                },\r\n                body: JSON.stringify({...selectedContractor})\r\n            }\r\n\r\n            Api.apiFetch(\"/admin/editcontractor\", option)\r\n            .then(data => {\r\n                if (data.status) {\r\n                    this.setState({contractorlist: data.result})\r\n                    this.editToggle()\r\n                }\r\n            })\r\n            .catch(error =>{})\r\n        }\r\n    }\r\n    deleteContractor =() => {\r\n        const {selectedContractor} = this.state;\r\n\r\n        const option = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"content-type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify({...selectedContractor})\r\n        }\r\n\r\n        Api.apiFetch(\"/admin/deletecontractor\", option)\r\n        .then(data => {\r\n            if (data.status) {\r\n                this.setState({contractorlist: data.result})\r\n                this.deleteToggle()\r\n            }\r\n        })\r\n        .catch(error =>{})\r\n    }\r\n\r\n    onDocumentLoadSuccess = ({ numPages }) => {\r\n        this.setState({ numPages });\r\n      };\r\n\r\n    loadPDF() {\r\n        \r\n        const option = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/pdf\"\r\n            }\r\n        }\r\n        /* fetch(`/api/viewtask`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/pdf\"\r\n            }\r\n        }) */\r\n        Api.apiFetchStream(\"/admin/viewtask\", option)\r\n        // .then(res => res.blob())\r\n        .then(response => {\r\n            //Create a Blob from the PDF Stream\r\n            console.log(response);\r\n            const file = new Blob([response], {\r\n                type: \"application/pdf\"\r\n            });\r\n            //Build a URL from the file\r\n            const loadURL = URL.createObjectURL(file);\r\n            //Open the URL on new Window\r\n            this.setState({loadURL})\r\n\r\n            this.setState({selectedContractor: {\r\n                doc: loadURL\r\n            }})\r\n\r\n           /*  WebViewer({\r\n                initialDoc: loadURL,\r\n                ui:'lefacy'\r\n            }, document.getElementById('webviewer'))\r\n            .then(instance => {})\r\n             */\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    sendInvite() {\r\n        const option = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body:JSON.stringify({...this.state.selectedContractor})\r\n        }\r\n        \r\n        Api.apiFetch(\"/admin/sendInvite\", option)\r\n        .then(data => {\r\n            if(data.status){\r\n                this.inviteToggle()\r\n                alert(\"sent successful\")\r\n            }\r\n        })\r\n        .catch(error => {\r\n            alert(\"sent error\")\r\n        });\r\n\r\n    }\r\n\r\n    storeTask() {\r\n        this.setState({\r\n            taskModal: !this.state.taskModal\r\n        });\r\n\r\n        fetch(`/api/storeTask`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/pdf\"\r\n            }\r\n        })\r\n        .then(res => res.blob())\r\n        .then(response => {\r\n            //Create a Blob from the PDF Stream\r\n            console.log(response);\r\n            const file = new Blob([response], {\r\n            type: \"application/pdf\"\r\n            });\r\n            //Build a URL from the file\r\n            const loadURL = URL.createObjectURL(file);\r\n            //Open the URL on new Window\r\n            this.setState({loadURL})\r\n\r\n            this.setState({selectedContractor: {\r\n                doc: loadURL\r\n            }})\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    export2Text() {\r\n        const option = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }\r\n\r\n        Api.apiFetch('/admin/exportuser2text', option)\r\n        .then(result => {\r\n            if(result.status)\r\n                saveSync(result.result, 'contractors.txt');\r\n        })\r\n        .catch(error => {\r\n            alert(error)\r\n        })\r\n\r\n    }\r\n\r\n    loadText = (data) => {\r\n        console.log('data', data)\r\n        this.setState({contractorList: data})\r\n        window.location.reload()\r\n    }\r\n\r\n    onHandleChange(e) {\r\n        const {contractor} = this.state\r\n        const {name, value} = e.target;\r\n        this.setState({contractor:{\r\n            ...contractor,\r\n            [name]: value\r\n        }})\r\n    }\r\n    onUpdateHandleChange(e) {\r\n        const {selectedContractor} = this.state\r\n        const {name, value} = e.target;\r\n        this.setState({selectedContractor:{\r\n            ...selectedContractor,\r\n            [name]: value\r\n        }})\r\n    }\r\n\r\n    render() {\r\n       const {inviteModal, addModal, editModal, deleteModal, contractor, contractorlist, selectedContractor, submitted} = this.state\r\n       const columns = [\r\n        {\r\n            Header: '',\r\n            id: 'id',\r\n            width: 40,\r\n            accessor: row => (\r\n                <CustomInput type=\"checkbox\" id=\"eCheckbox1\" value={row._id}\r\n                         label=\"&nbsp;\"/>\r\n            )\r\n        },\r\n        {\r\n            Header: 'First Name',\r\n            accessor: 'firstname'\r\n        }, \r\n        {\r\n            Header: 'Last Name',\r\n            accessor: 'lastname',\r\n        },\r\n        {\r\n            Header: 'Job Site',\r\n            accessor: 'jobsite',\r\n        },\r\n        {\r\n            Header: 'User Name',\r\n            accessor: 'username'\r\n        },\r\n        {\r\n            Header: 'Password',\r\n            accessor: 'password'\r\n        },\r\n        {\r\n            Header: 'Phone Number',\r\n            accessor: 'phone'\r\n        },\r\n        {\r\n            Header: 'Email',\r\n            accessor: 'email'\r\n        },\r\n        {\r\n            Header: 'Invite',\r\n            id: 'invite',\r\n            width: 120,\r\n            accessor: row => (\r\n                <Button outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={(e) => this.showInviteModal(row._id)}>\r\n                    Send <i className=\"lnr-location\"> </i>\r\n                </Button>\r\n            )\r\n        },\r\n        {\r\n            Header: 'Actions',\r\n            id: 'actions',\r\n            width: 120,\r\n            accessor: d =>\r\n                <div>\r\n                \r\n                {/* <Button outline className=\"btn-shadow btn-dashed\" color=\"info\" onClick={(e) => this.showTaskModal(d._id)}>\r\n                    <i className=\"lnr-paperclip\"> </i>\r\n                </Button> */}\r\n                <Button outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={(e) => this.showEditContractorModal(d._id)}>\r\n                    <i className=\"lnr-pencil\"> </i>\r\n                </Button>\r\n                <Button outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={(e) => this.showDeleteConfirmModal(d._id)}>\r\n                    <i className=\"lnr-trash\"> </i>\r\n                </Button>\r\n                </div>\r\n            \r\n        }\r\n    ]\r\n        return (\r\n            <Fragment>\r\n                <Row className=\"h-100 no-gutters\">\r\n                    <Col md=\"12\">\r\n                        <Card className=\"main-card mb-3\">\r\n                            <CardHeader className = \"text-right\">\r\n                                <i className=\"lnr-user\"> </i>\r\n                                Contractors Management\r\n                                <div className=\"btn-actions-pane-right\">\r\n                                    <Row>\r\n                                        <Button outline className=\"btn-shadow\" color=\"secondary\" onClick={(e) => this.showAddContractorModal()} style={{marginRight: 10}}>\r\n                                            <i className=\"pe-7s-add-user\"> </i>\r\n                                        </Button>\r\n                                        <Button outline className=\"btn-shadow\" color=\"secondary\" onClick={(e) => this.export2Text()} style={{marginRight: 10}}>\r\n                                            <i className=\"pe-7s-diskette\"> </i>\r\n                                        </Button>\r\n                                        {/* <input type=\"file\" onChange={this.loadText} /> */}\r\n                                        <FileInput setData={this.loadText} api='/admin/loaduserfromtext'/>\r\n                                    </Row>\r\n\r\n                                </div>\r\n                            </CardHeader>\r\n                            <CardBody>\r\n                                <ReactTable\r\n                                    data={contractorlist}\r\n                                    columns={columns}\r\n                                    defaultPageSize={10}\r\n                                    className=\"-striped -highlight\"\r\n                                />\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                \r\n                <Modal isOpen={inviteModal} toggle={this.inviteToggle} className=\"modal-lg\">\r\n                    <ModalHeader toggle={this.inviteToggle}>{selectedContractor.username}</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form>\r\n                        {/* <iframe src={this.state.loadURL} style={{\"width\":\"750px\", \"height\":\"600px\"}} frameBorder=\"1\"></iframe> */}\r\n                        {/* <Document\r\n                            //file=\"/pattern_doc/task_pattern.pdf\"\r\n                            file={this.state.loadURL}\r\n                            onLoadSuccess={this.onDocumentLoadSuccess}\r\n                        >\r\n                            <Page pageNumber={this.state.pageNumber} width={600} \r\n                            customTextRenderer={this.makeTextRenderer(this.state.searchText)}/>\r\n                        </Document> */}\r\n                        \r\n                        <FormGroup>\r\n                            <Input type=\"text\" name=\"email\" id=\"email\" style={{\"display\":\"none\"}} value={this.state.selectedContractor.email}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" name=\"phone\" id=\"phone\" style={{\"display\":\"none\"}} value={this.state.selectedContractor.phone}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label >UserName</Label>\r\n                            <Input type=\"text\" name=\"username\" id=\"username\" value={this.state.selectedContractor.username} readOnly/>\r\n                            \r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label >Password</Label>\r\n                            <Input type=\"text\" name=\"password\" id=\"password\" value={this.state.selectedContractor.password} readOnly/>\r\n                        </FormGroup>\r\n                        <div id=\"webviewer\"></div>\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button  outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={this.inviteToggle}>Cancel</Button>\r\n                        <Button type=\"submit\" color=\"secondary\" onClick={this.sendInvite.bind(this)}>Send</Button>{' '}\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <Modal isOpen={addModal} toggle={this.addToggle}>\r\n                    <ModalHeader>Add Contractor</ModalHeader>\r\n                    <ModalBody>\r\n                        <FormGroup className=\"mb-2 mr-sm-2 \">\r\n                            <Label className=\"mr-sm-2\">First Name: </Label>\r\n                            <Input name=\"firstname\" placeholder=\"Input...\"  onChange={this.onHandleChange}/>\r\n                            {submitted && !contractor.firstname &&\r\n                                <div className=\"help-block\">firstname is required</div>\r\n                                }\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-2 mr-sm-2 \">\r\n                            <Label className=\"mr-sm-2\">Last Name: </Label>\r\n                            <Input name=\"lastname\" placeholder=\"Input...\"  onChange={this.onHandleChange}/>\r\n                            {submitted && !contractor.lastname &&\r\n                                <div className=\"help-block\">lastname is required</div>\r\n                                }\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-2 mr-sm-2 \">\r\n                            <Label className=\"mr-sm-2\">User Name: </Label>\r\n                            <Input name=\"username\" placeholder=\"Input...\"  onChange={this.onHandleChange}/>\r\n                            {submitted && !contractor.username &&\r\n                                <div className=\"help-block\">username is required</div>\r\n                                }\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-2 mr-sm-2 \">\r\n                            <Label className=\"mr-sm-2\">Email: </Label>\r\n                            <Input name=\"email\" placeholder=\"Input...\"  onChange={this.onHandleChange}/>\r\n                            {submitted && !contractor.email &&\r\n                                <div className=\"help-block\">email is required</div>\r\n                                }\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-2 mr-sm-2 \">\r\n                            <Label className=\"mr-sm-2\">Phone: </Label>\r\n                            <Input name=\"phone\" placeholder=\"Input...\"  onChange={this.onHandleChange}/>\r\n                            {submitted && !contractor.phone &&\r\n                                <div className=\"help-block\">PhoneNumber is required</div>\r\n                            }\r\n                            {\r\n                                this.state.misPhone && <div className=\"help-block\">please input (+) countrycode</div>\r\n                            }\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-2 mr-sm-2 \">\r\n                            <Label className=\"mr-sm-2\">Password: </Label>\r\n                            <Input name=\"password\" value={this.state.generatePassword} onChange={this.onHandleChange}/>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-2 mr-sm-2 \">\r\n                            <Label className=\"mr-sm-2\">JobSite: </Label>\r\n                            <Input name=\"jobsite\" placeholder=\"Input...\"  onChange={this.onHandleChange}/>\r\n                        </FormGroup>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button  outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={this.addToggle}>Cancel</Button>\r\n                        <Button color=\"secondary\" onClick={this.addContractor}>Save</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <Modal isOpen={editModal} toggle={this.editToggle}>\r\n                    <ModalHeader>Update Contractor</ModalHeader>\r\n                    <ModalBody>\r\n                        <FormGroup className=\"mb-2 mr-sm-2 \">\r\n                            <Label className=\"mr-sm-2\">First Name: </Label>\r\n                            <Input name=\"firstname\" placeholder=\"Input...\" value={selectedContractor?selectedContractor.firstname:''} onChange={this.onUpdateHandleChange}/>\r\n                            {submitted && !selectedContractor.firstname &&\r\n                                <div className=\"help-block\">First Name is required</div>\r\n                            }\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-2 mr-sm-2 \">\r\n                            <Label className=\"mr-sm-2\">Last Name: </Label>\r\n                            <Input name=\"lastname\" placeholder=\"Input...\" value={selectedContractor?selectedContractor.lastname:''} onChange={this.onUpdateHandleChange}/>\r\n                            {submitted && !selectedContractor.lastname &&\r\n                                <div className=\"help-block\">Last Name is required</div>\r\n                            }\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-2 mr-sm-2 \">\r\n                            <Label className=\"mr-sm-2\">User Name: </Label>\r\n                            <Input name=\"username\" placeholder=\"Input...\" value={selectedContractor?selectedContractor.username:''} onChange={this.onUpdateHandleChange}/>\r\n                            {submitted && !selectedContractor.username &&\r\n                                <div className=\"help-block\">>User Name is required</div>\r\n                            }\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-2 mr-sm-2 \">\r\n                            <Label className=\"mr-sm-2\">Email: </Label>\r\n                            <Input name=\"email\" placeholder=\"Input...\" value={selectedContractor?selectedContractor.email:''} onChange={this.onUpdateHandleChange}/>\r\n                            {submitted && !selectedContractor.email &&\r\n                                <div className=\"help-block\">Email is required</div>\r\n                            }\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-2 mr-sm-2 \">\r\n                            <Label className=\"mr-sm-2\">Phone: </Label>\r\n                            <Input name=\"phone\" placeholder=\"Input...\" value={selectedContractor?selectedContractor.phone:''} onChange={this.onUpdateHandleChange}/>\r\n                            {submitted && !selectedContractor.phone &&\r\n                                <div className=\"help-block\">PhoneNumber is required</div>\r\n                            }\r\n                            {\r\n                                this.state.misPhone && <div className=\"help-block\">please input +</div>\r\n                            }\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-2 mr-sm-2 \">\r\n                            <Label className=\"mr-sm-2\">Password: </Label>\r\n                            <Input name=\"password\" placeholder=\"Input...\" value={selectedContractor?selectedContractor.password:''} onChange={this.onUpdateHandleChange}/>\r\n                        </FormGroup>\r\n                       \r\n                        <FormGroup className=\"mb-2 mr-sm-2 \">\r\n                            <Label className=\"mr-sm-2\">JobSite: </Label>\r\n                            <Input name=\"jobsite\" placeholder=\"Input...\" value={selectedContractor?selectedContractor.jobsite:''} onChange={this.onUpdateHandleChange}/>\r\n                        </FormGroup>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button  outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={this.editToggle}>Cancel</Button>\r\n                        <Button color=\"secondary\" onClick={this.editContractor}>Update</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <Modal isOpen={deleteModal} toggle={this.deleteToggle}>\r\n                    <ModalHeader>Delete Confirm</ModalHeader>\r\n                    <ModalBody>Do you want to delete this contractor?</ModalBody>\r\n                    <ModalFooter>\r\n                        <Button  outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={this.deleteToggle}>Cancel</Button>\r\n                        <Button color=\"secondary\" onClick={this.deleteContractor}>Confirm</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { loggedIn } = state.authentication;\r\n    return {\r\n        loggedIn\r\n    };\r\n}\r\n\r\nconst connectedContractorPage = connect(mapStateToProps)(ContractorPage);\r\nexport { connectedContractorPage as ContractorPage }; ","import React, {Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Col, Row, Card, CardBody, Button, Input, CardHeader, Modal, ModalHeader, ModalFooter, ModalBody, FormGroup} from 'reactstrap';\r\nimport ReactTable from \"react-table\";\r\nimport SignatureCanvas from 'react-signature-canvas';\r\nimport { PDFDocument } from 'pdf-lib';\r\nimport { saveSync } from 'save-file';\r\nimport API from '../../Api'\r\n\r\nclass DocketsPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedDocket: [],\r\n            docketList: [],\r\n            loadURL: '',\r\n            viewModal: false,\r\n            approveModal: false,\r\n            rejectModal: false,\r\n            sendModal: false,\r\n            deleteModal: false,\r\n            pdf: null,\r\n            signed1: false,\r\n            signed2: false,\r\n            manageremail: ''\r\n        };\r\n        this.sigPad = {};\r\n        this.sigPad1 = {};\r\n\r\n        this.viewToggle = this.viewToggle.bind(this)\r\n        this.approveToggle = this.approveToggle.bind(this)\r\n        this.rejectToggle = this.rejectToggle.bind(this)\r\n        this.sendToggle = this.sendToggle.bind(this)\r\n        this.deleteToggle = this.deleteToggle.bind(this)\r\n        this.doApprove = this.doApprove.bind(this)\r\n        this.doReject = this.doReject.bind(this)\r\n        this.doSend = this.doSend.bind(this)\r\n        this.doDelete = this.doDelete.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.export2Text = this.export2Text.bind(this)\r\n        this.trim = this.trim.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        const option = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/txt\"\r\n            }\r\n        }\r\n\r\n        API.apiFetch('/admin/loaddocket', option)\r\n        .then(data => {\r\n            this.setState({docketList: data.result})\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n\r\n        \r\n    }\r\n\r\n    showRespondModal(id) {\r\n        const {docketList} = this.state\r\n\r\n        const temp = docketList.filter(docket => docket._id === id)\r\n        this.setState({selectedDocket: temp[0]})\r\n\r\n        this.setState({sendModal: true})\r\n\r\n    }\r\n    \r\n    showApproveConfirmModal(id) {\r\n        const {docketList} = this.state\r\n\r\n        const temp = docketList.filter(docket => docket._id === id)\r\n        this.setState({selectedDocket: temp[0]})\r\n        this.setState({approveModal: true})\r\n    }\r\n    \r\n    showRejectConfirmModal(id) {\r\n        const {docketList} = this.state\r\n\r\n        const temp = docketList.filter(docket => docket._id === id)\r\n        this.setState({selectedDocket: temp[0]})\r\n        this.setState({rejectModal: true})\r\n    }\r\n\r\n    showDeleteConfirmModal(id) {\r\n        const {docketList} = this.state\r\n\r\n        const temp = docketList.filter(docket => docket._id === id)\r\n        this.setState({selectedDocket: temp[0]})\r\n        this.setState({deleteModal: true})\r\n    }\r\n\r\n    showDocketViewModal(id, path) {\r\n        const {docketList} = this.state\r\n\r\n        const temp = docketList.filter(docket => docket._id === id)\r\n        this.setState({selectedDocket: temp[0]})\r\n\r\n        const option = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({url: path})\r\n        }\r\n\r\n        API.apiFetchStream('/admin/viewdocket', option)\r\n        .then(result => {\r\n            console.log(result)\r\n            if(result.status !== undefined) {\r\n                alert(result.message)\r\n            }\r\n            else {\r\n\r\n                const file = new Blob([result], {\r\n                    type: \"application/pdf\"\r\n                });\r\n    \r\n                const loadURL = URL.createObjectURL(file);\r\n                this.setState({loadURL});\r\n    \r\n                this.blob2arraybuffer(file)\r\n            }\r\n            \r\n        })\r\n        .catch(error => {\r\n            alert(error)\r\n        })\r\n\r\n        this.setState({viewModal: true})\r\n    \r\n    }\r\n\r\n    viewToggle() {\r\n        this.setState({\r\n            viewModal: !this.state.viewModal\r\n        });\r\n    }\r\n    approveToggle() {\r\n        this.setState({\r\n            approveModal: !this.state.approveModal\r\n        });\r\n    }\r\n\r\n    rejectToggle() {\r\n        this.setState({\r\n            rejectModal: !this.state.rejectModal\r\n        });\r\n    }\r\n\r\n    sendToggle() {\r\n        this.setState({\r\n            sendModal: !this.state.sendModal\r\n        });\r\n    }\r\n\r\n    deleteToggle() {\r\n        this.setState({\r\n            deleteModal: !this.state.deleteModal\r\n        });\r\n    }\r\n\r\n    doApprove() {\r\n        const {selectedDocket} = this.state\r\n        const _id = selectedDocket._id\r\n        const status = \"approve\"\r\n        const option = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({_id, status})\r\n        }\r\n\r\n        API.apiFetch('/admin/respondresult', option)\r\n        .then(data => {\r\n            this.setState({docketList: data.result})\r\n            this.approveToggle()\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    doReject() {\r\n        const {selectedDocket} = this.state\r\n        const _id = selectedDocket._id\r\n        const status = \"reject\"\r\n        const option = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({_id, status})\r\n        }\r\n\r\n        API.apiFetch('/admin/respondresult', option)\r\n        .then(data => {\r\n            this.setState({docketList: data.result})\r\n            this.rejectToggle()\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    doSend() {\r\n        const { selectedDocket} = this.state\r\n        const {status, email} = selectedDocket\r\n        var id = selectedDocket._id\r\n        const option = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({id, email, status})\r\n        }\r\n\r\n        API.apiFetch('/admin/sendresult', option)\r\n        .then(data => {\r\n            console.log(data)\r\n            this.sendToggle()\r\n            alert(\"sent successful\")\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    doDelete() {\r\n\r\n        const {selectedDocket} = this.state\r\n\r\n        const _id = selectedDocket._id\r\n        const option = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({_id})\r\n        }\r\n\r\n        API.apiFetch('/admin/deletedocket', option)\r\n        .then(data => {\r\n            this.setState({docketList: data.result})\r\n            this.deleteToggle()\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    async blob2arraybuffer(file) {\r\n        var load = await file.arrayBuffer();\r\n        this.setState({pdf: load})\r\n    }\r\n\r\n    clear = () => {\r\n        this.sigPad.clear();\r\n    };\r\n\r\n    clear1 = () => {\r\n        this.sigPad1.clear();\r\n    };\r\n\r\n    trim = async (index) => {\r\n        const { pdf } = this.state;\r\n\r\n        this.setState({ signing: true });\r\n    // try{\r\n        const trimmedDataURL = this.sigPad\r\n          .getTrimmedCanvas()\r\n          .toDataURL('image/png');\r\n\r\n        const trimmedDataURL1 = this.sigPad1\r\n          .getTrimmedCanvas()\r\n          .toDataURL('image/png');\r\n\r\n        if (pdf) {\r\n            const pdfDoc = await PDFDocument.load(pdf);\r\n            const pngImage = await pdfDoc.embedPng(trimmedDataURL);\r\n            const pngDims = pngImage.scale(0.8);\r\n            if(index === 1) this.setState({signed1: true})\r\n        \r\n            const pages = pdfDoc.getPages();\r\n        \r\n            pages.forEach(page => {\r\n                page.drawImage(pngImage, {\r\n                    x: 170,\r\n                    y: 230,\r\n                    width: pngDims.width,\r\n                    height: pngDims.height,\r\n                });\r\n            });\r\n\r\n            const pngImage1 = await pdfDoc.embedPng(trimmedDataURL1);\r\n            const pngDims1 = pngImage1.scale(0.8);\r\n            if(index === 2) this.setState({signed2: true})\r\n            pages.forEach(page => {\r\n                page.drawImage(pngImage1, {\r\n                    x: 470,\r\n                    y: 230,\r\n                    width: pngDims1.width,\r\n                    height: pngDims1.height,\r\n                });\r\n            });\r\n    \r\n            const pdfBytes = await pdfDoc.saveAsBase64({ dataUri: true });\r\n            // const pdfBytes = await pdfDoc.save();\r\n           // console.log('pdfbytes', pdfBytes)\r\n\r\n            this.setState({ loadURL: pdfBytes, signing: false});\r\n        } else {\r\n            this.setState({ signing: false });\r\n        }\r\n    // }\r\n    // catch(error){\r\n    //     alert('No find data')\r\n    // }\r\n    };\r\n\r\n    removeBase64Mark(data) {\r\n        var BASE64_MARKER = ';base64,';\r\n        var parts;\r\n        if (data.indexOf(BASE64_MARKER) === -1) {\r\n            parts = data.split(',');\r\n            return parts[1]\r\n        }\r\n\r\n        parts = data.split(BASE64_MARKER);\r\n        return parts[1]\r\n    }\r\n\r\n    async uploadDoc() {\r\n        const { selectedDocket, loadURL, manageremail} = this.state;\r\n        const {_id, status} = selectedDocket;\r\n\r\n        // if (!pdf){\r\n        //     alert(\"No PDF\")\r\n        //     return;\r\n        // }\r\n\r\n        // const pdfDoc = await PDFDocument.load(pdf);\r\n        // const pdfBytes = await pdfDoc.saveAsBase64({ dataUri: true });\r\n        \r\n        // var data = this.removeBase64Mark(pdfBytes)\r\n        const email = manageremail\r\n\r\n        var data = this.removeBase64Mark(loadURL)\r\n        var requestOptions;\r\n        if(status === 'Waiting') {\r\n\r\n            requestOptions = {\r\n                method: 'POST',\r\n                headers: {\r\n                     'Content-Type': 'application/json',\r\n                    },\r\n                body: JSON.stringify({data, docketid: _id, email})\r\n            };\r\n        }\r\n        else {\r\n                requestOptions = {\r\n                    method: 'POST',\r\n                    headers: {\r\n                            'Content-Type': 'application/json',\r\n                        },\r\n                    body: JSON.stringify({email, docketid: _id})\r\n                };\r\n        }\r\n\r\n        API.apiFetch('/admin/uploaddoc', requestOptions)\r\n        .then(data => {\r\n            this.setState({docketList: data.result})\r\n            this.viewToggle();\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    handleChange(e) {\r\n        const {name, value} = e.target;\r\n        const {selectedDocket} = this.state\r\n\r\n        this.setState({\r\n            selectedDocket: {\r\n                ...selectedDocket,\r\n                [name]: value \r\n            }\r\n        })\r\n    }\r\n\r\n    handleManagerEmailChange(e){\r\n        const {value} = e.target;\r\n\r\n        this.setState({manageremail: value})\r\n    }\r\n\r\n    export2Text() {\r\n        const option = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }\r\n\r\n        API.apiFetch('/admin/export2text', option)\r\n        .then(result => {\r\n            if(result.status)\r\n                alert('Successful')\r\n        })\r\n        .catch(error => {\r\n            alert(error)\r\n        })\r\n\r\n    }\r\n\r\n    saveAsFile(id) {\r\n        const option = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({id})\r\n        }\r\n\r\n        API.apiFetch('/admin/export2TextHistory?id='+id, option)\r\n        .then(result => {\r\n            if(result.status)\r\n                saveSync(result['data'], result['docket_name'] +'.txt');\r\n        })\r\n        .catch(error => {\r\n            alert(error)\r\n        })\r\n       \r\n    }\r\n\r\n    render() {\r\n       const {docketList, loadURL, selectedDocket} = this.state\r\n       console.log('sigpad', this.sigPad)\r\n       const columns = [\r\n                                                \r\n        {\r\n            Header: 'Contractor',\r\n            accessor: 'contractorname'\r\n        }, \r\n        {\r\n            Header: 'Date',\r\n            accessor: 'date',\r\n        },\r\n        {\r\n            Header: 'Notes',\r\n            accessor: 'notes'\r\n        },\r\n        {\r\n            Header: 'Status',\r\n            accessor: 'status'\r\n        },\r\n        {\r\n            Header: 'Actions',\r\n            id: 'path',\r\n            accessor: row => (\r\n                <div style={{display: \"flex\", justifyContent:\"center\"}}>\r\n                <Button outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={(e) => this.showDocketViewModal(row._id, row.path)} style={{marginRight: 10}}>\r\n                {row.status === 'Signed'? <i className=\"lnr-eye\" /> : <i className=\"lnr-pencil\" />}\r\n                </Button>\r\n                <Button outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={(e) => this.saveAsFile(row._id)}>\r\n                    <i className=\"pe-7s-diskette\"  />\r\n                </Button>\r\n                <Button outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={(e) => this.showDeleteConfirmModal(row._id)}>\r\n                    <i className=\"lnr-trash\"  />\r\n                </Button>\r\n                </div>\r\n            )\r\n        },\r\n        // {\r\n        //     Header: 'Submit',\r\n        //     id: '_id',\r\n        //     accessor: d =>\r\n        //         <div>\r\n        //         <Button outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={(e) => this.showApproveConfirmModal(d._id)}>\r\n        //             <i className=\"lnr-thumbs-up\"> </i>\r\n        //         </Button>\r\n        //         <Button outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={(e) => this.showRejectConfirmModal(d._id)}>\r\n        //             <i className=\"lnr-thumbs-down\"> </i>\r\n        //         </Button>\r\n        // },\r\n        \r\n        // {\r\n        //     Header: 'Status',\r\n        //     accessor: 'status'\r\n        // }   \r\n        // },\r\n        // {\r\n        //     Header: 'Email',\r\n        //     id: 'email',\r\n        //     accessor: row => (\r\n        //         <div>\r\n        //         <Button outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={(e) => this.showRespondModal(row._id)}>\r\n        //             Respond <i className=\"lnr-location\"> </i>\r\n        //         </Button>\r\n        //         <i className=\"lnr-trash\" onClick={(e) => this.showDeleteConfirmModal(row._id)} />\r\n        //         </div>\r\n        //     )\r\n        // },\r\n    ]\r\n        return (\r\n            <Fragment>\r\n                <Row className=\"h-100 no-gutters\">\r\n                    <Col md=\"12\">\r\n                        <Card className=\"main-card mb-3\">\r\n                            <CardHeader className = \"text-right\">\r\n                            <i className=\"lnr-book\"> </i>  Dockets Management\r\n                                {/* <div className=\"btn-actions-pane-right\">\r\n                                    <Button outline className=\"btn-shadow\" color=\"secondary\" onClick={(e) => this.export2Text()}>\r\n                                    <i className=\"pe-7s-diskette\"> </i>\r\n                                    </Button>\r\n                                </div>                       */}\r\n                            </CardHeader>\r\n                            <CardBody>\r\n                                <ReactTable\r\n                                    data={docketList}\r\n                                    columns={columns}\r\n                                    defaultPageSize={10}\r\n                                    className=\"-striped -highlight\"\r\n                                />\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Modal isOpen={this.state.viewModal} toggle={this.viewToggle} style={{maxWidth:\"800px\", height:\"auto\"}} >\r\n                    <ModalHeader toggle={this.viewToggle}>{selectedDocket?selectedDocket.contractor:''}</ModalHeader>\r\n                    <ModalBody>\r\n                        {loadURL !== '' ? \r\n                                    <iframe src={loadURL} style={{width:\"750px\", height:\"600px\" , margin:\"auto\"}} frameBorder=\"1\" title=\"iframe\"></iframe>\r\n                                : ''}\r\n                        { selectedDocket.status === 'Waiting'?\r\n                        <div>\r\n                        <div className=\"text-center\">\r\n                            <SignatureCanvas\r\n                                penColor=\"black\"\r\n                                ref={ref => {\r\n                                    this.sigPad = ref;\r\n                                }}\r\n                                onEnd={() => this.trim(1)}\r\n                                canvasProps={{width: 200, height: 80, className: 'sigCanvas'}}\r\n                            />\r\n                            <SignatureCanvas\r\n                                penColor=\"black\"\r\n                                ref={ref => {\r\n                                    this.sigPad1 = ref;\r\n                                }}\r\n                                onEnd={() => this.trim(2)}\r\n                                canvasProps={{width: 200, height: 80, className: 'sigCanvas'}}\r\n                            />\r\n                        </div>\r\n                        {/* <div style={{marginTop:\"50px\", textAlign:\"center\"}}>\r\n                            <Button outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={ this.clear}><i className=\"lnr-trash\"></i></Button>\r\n                            <Button outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={this.trim} style={{margin:\"0px 15px\"}}><i className=\"lnr-pencil\"></i></Button>\r\n                            <Button outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={ this.clear1}><i className=\"lnr-trash\"></i></Button>\r\n                        </div> */}\r\n                        </div>:''\r\n                        }\r\n                    { selectedDocket.status === 'Waiting' &&\r\n                        <FormGroup>\r\n                            <Input type=\"input\" name=\"email\"\r\n                                placeholder=\"Email here...\"\r\n                                value={this.state.manageremail} onChange={this.handleManagerEmailChange.bind(this)}\r\n                                style={{marginTop: 10}}\r\n                            />\r\n                        </FormGroup>\r\n                    }\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        {selectedDocket.status === 'Waiting' && \r\n                            <Button color=\"secondary\"  onClick={this.uploadDoc.bind(this)}\r\n                                disabled={this.state.manageremail === '' || !this.state.signed1 || !this.state.signed2}\r\n                            >Save</Button>\r\n                        }\r\n                        {/* <Button color=\"secondary\"  onClick={this.doReject}>Reject</Button>\r\n                        <Button color=\"secondary\" dashed onClick={this.doApprove}>Approve</Button> */}\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n                <Modal isOpen={this.state.approveModal} toggle={this.approveToggle}  >\r\n                    <ModalHeader toggle={this.approveToggle}>Confirm Approve</ModalHeader>\r\n                    <ModalBody>\r\n                        Would you like to approve current docket?\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={this.approveToggle}>Cancel</Button>\r\n                        <Button color=\"secondary\" onClick={this.doApprove}>Approve</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n                <Modal isOpen={this.state.rejectModal} toggle={this.rejectToggle}  >\r\n                    <ModalHeader toggle={this.rejectToggle}>Confirm Reject</ModalHeader>\r\n                    <ModalBody>\r\n                        Would you like to reject current docket?\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button  outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={this.rejectToggle}>Cancel</Button>\r\n                        <Button color=\"secondary\" onClick={this.doReject}>Reject</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n                <Modal isOpen={this.state.sendModal} toggle={this.sendToggle}  >\r\n                    <ModalHeader toggle={this.sendToggle}>Confirm Send Result</ModalHeader>\r\n                    <ModalBody>\r\n                        Would you like to send current docket result?\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button  outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={this.sendToggle}>Cancel</Button>\r\n                        <Button color=\"secondary\" onClick={this.doSend}>Send</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <Modal isOpen={this.state.deleteModal} toggle={this.deleteToggle}  >\r\n                    <ModalHeader toggle={this.rejectToggle}>Delete Docket</ModalHeader>\r\n                    <ModalBody>\r\n                        Would you like to delete current docket?\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button  outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={this.deleteToggle}>Cancel</Button>\r\n                        <Button color=\"secondary\" onClick={this.doDelete}>Delete</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { loggingIn } = state.authentication;\r\n    return {\r\n        loggingIn\r\n    };\r\n}\r\n\r\nconst connectedDocketsPage = connect(mapStateToProps)(DocketsPage);\r\nexport { connectedDocketsPage as DocketsPage }; ","import React, {Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Col, Row, Card, CardBody, Button, CustomInput, CardHeader,\r\n        FormGroup, Label, Input,\r\n        Modal, ModalBody, ModalHeader, ModalFooter} from 'reactstrap';\r\nimport ReactTable from \"react-table\";\r\nimport { saveSync } from 'save-file';\r\n// import makeAnimated from 'react-select/lib/animated';\r\nimport FileInput from '../../components/FileInput'\r\n\r\nimport Api from '../../Api';\r\n\r\nconst data = [\r\n    {\r\n        id: 1,\r\n        title: 'KKK',\r\n        contractor: 'LLL'\r\n        \r\n    },\r\n    {\r\n        id: 2,\r\n        title: 'KKK',\r\n        contractor: 'LLL'\r\n    }\r\n]\r\n\r\nclass TasksPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            taskModal: false,\r\n            taskList: [],\r\n            selectedTask: [],\r\n            task: {\r\n                code: '',\r\n                title: '',\r\n                description: ''\r\n            },\r\n            deleteModal: false,\r\n            editModal: false,\r\n            newModal: false\r\n        };\r\n\r\n        this.taskToggle = this.taskToggle.bind(this)\r\n        this.editToggle = this.editToggle.bind(this)\r\n        this.newToggle = this.newToggle.bind(this)\r\n        this.deleteToggle = this.deleteToggle.bind(this)\r\n        this.onUpdateHandleChange = this.onUpdateHandleChange.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        const option = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/txt\"\r\n            }\r\n        }\r\n\r\n        Api.apiFetch('/admin/loadtask', option)\r\n        .then(data => {\r\n            this.setState({taskList: data.result})\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    showTaskModal(id) {\r\n        console.log(id)\r\n        this.setState({selectedUser: data[id]})\r\n        this.setState({taskModal: true})\r\n    }\r\n\r\n    showAddTaskModal(id) {\r\n        this.setState({newModal: true})\r\n    }\r\n\r\n    showEditTaskModal(id) {\r\n        const temp = this.state.taskList.filter(task => task._id === id)\r\n        this.setState({selectedTask: temp[0]})\r\n        this.setState({editModal: true})\r\n    }\r\n    \r\n    showDeleteConfirmModal(id) {\r\n        const temp = this.state.taskList.filter(task => task._id === id)\r\n        this.setState({selectedTask: temp[0]})\r\n        this.setState({deleteModal: true})\r\n    }\r\n\r\n    loadText = (data) => {\r\n        this.setState({taskList: data})\r\n        // window.location.reload()\r\n        console.log('data', data)\r\n    }\r\n\r\n    \r\n\r\n    taskToggle() {\r\n        this.setState({\r\n            taskModal: !this.state.taskModal\r\n        });\r\n    }\r\n\r\n    deleteToggle() {\r\n        this.setState({\r\n            deleteModal: !this.state.deleteModal\r\n        });\r\n    }\r\n\r\n    editToggle() {\r\n        this.setState({\r\n            editModal: !this.state.editModal\r\n        });\r\n    }\r\n\r\n    newToggle() {\r\n        this.setState({\r\n            newModal: !this.state.newModal\r\n        });\r\n    }\r\n\r\n    deleteTask =() => {\r\n        const {selectedTask} = this.state;\r\n\r\n        const option = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"content-type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify({...selectedTask})\r\n        }\r\n\r\n        Api.apiFetch(\"/admin/deletetask\", option)\r\n        .then(data => {\r\n            if (data.status) {\r\n                this.setState({taskList: data.result})\r\n                this.deleteToggle()\r\n            }\r\n            else alert(\"delete failed\")\r\n        })\r\n        .catch(error =>{\r\n            \r\n            alert(\"delete error\", error)\r\n        })\r\n    }\r\n\r\n    editTask =() => {\r\n        const {selectedTask} = this.state;\r\n\r\n        const option = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"content-type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify({...selectedTask})\r\n        }\r\n\r\n        Api.apiFetch(\"/admin/edittask\", option)\r\n        .then(data => {\r\n            if (data.status) {\r\n                this.setState({taskList: data.result})\r\n                this.editToggle()\r\n            }\r\n            else alert(\"edit failed\")\r\n        })\r\n        .catch(error =>{\r\n            alert(\"edit error\")\r\n        })\r\n    }\r\n\r\n    newTask =() => {\r\n        const {selectedTask} = this.state;\r\n\r\n        const option = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"content-type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify({...selectedTask})\r\n        }\r\n\r\n        Api.apiFetch(\"/admin/newtask\", option)\r\n        .then(data => {\r\n            if (data.status) {\r\n                this.setState({taskList: data.result})\r\n                this.newToggle()\r\n            }\r\n            else alert(\"new failed\")\r\n        })\r\n        .catch(error =>{\r\n            alert(\"new error\")\r\n        })\r\n    }\r\n\r\n    storeTask() {\r\n        this.setState({\r\n            taskModal: !this.state.taskModal\r\n        });\r\n    }\r\n\r\n    onUpdateHandleChange(e) {\r\n        const {name, value} = e.target\r\n        const {selectedTask} = this.state\r\n        this.setState({\r\n            selectedTask: {\r\n                ...selectedTask,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    export2Text() {\r\n        const option = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }\r\n\r\n        Api.apiFetch('/admin/export2TextTask', option)\r\n        .then(result => {\r\n            if(result.status)\r\n                saveSync(result.data, 'tasks.txt');\r\n        })\r\n        .catch(error => {\r\n            alert(error)\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n       const {taskList, selectedTask, editModal, deleteModal, newModal} = this.state\r\n       const columns = [\r\n        {\r\n            Header: 'Currect Tasks',\r\n            id: '_id',\r\n            accessor: row => (\r\n                <CustomInput type=\"checkbox\" id=\"eCheckbox1\" value={row._id}\r\n                         label=\"&nbsp;\"/>\r\n            )\r\n        },\r\n        {\r\n            Header: 'ActivityCode',\r\n            accessor: 'code'\r\n        }, \r\n        {\r\n            Header: 'AcitivityName',\r\n            accessor: 'title'\r\n        }, \r\n        {\r\n            Header: 'Description',\r\n            accessor: 'description'\r\n        }, \r\n        \r\n        {\r\n            Header: 'Actions',\r\n            id: 'actions',\r\n            accessor: d =>\r\n                <div>\r\n                <Button outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={(e) => this.showEditTaskModal(d._id)}>\r\n                    <i className=\"lnr-pencil\"> </i>\r\n                </Button>\r\n                <Button outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={(e) => this.showDeleteConfirmModal(d._id)}>\r\n                    <i className=\"lnr-trash\"> </i>\r\n                </Button>\r\n                </div>\r\n            \r\n        }\r\n    ]\r\n        return (\r\n            <Fragment>\r\n                <Row className=\"h-100 no-gutters\">\r\n                    <Col md=\"12\">\r\n                        <Card className=\"main-card mb-3\">\r\n                            <CardHeader className = \"text-right\">\r\n                            <i className=\"lnr-database\"> </i> Tasks Management\r\n                                <div className=\"btn-actions-pane-right\">\r\n                                <Button outline className=\"btn-shadow\" color=\"secondary\" onClick={(e) => this.showAddTaskModal()} style={{marginRight: 10}}>\r\n                                    <i className=\"lnr-file-add\"> </i>\r\n                                </Button>\r\n                                <Button outline className=\"btn-shadow\" color=\"secondary\" onClick={(e) => this.export2Text()} style={{marginRight: 10}}>\r\n                                    <i className=\"pe-7s-diskette\"> </i>\r\n                                </Button>\r\n                                {/* <CustomInput \r\n                                    type=\"file\"\r\n                                    inputProps={{\r\n                                        onChange : this.loadTask,\r\n                                        type: \"text\",\r\n                                        \r\n                                    }} \r\n                                /> */}\r\n                                {/* <input type=\"file\" onChange={this.loadText} /> */}\r\n                                <FileInput api='/admin/loadtaskfromtext' setData={this.loadText}/>\r\n                                </div>\r\n                            </CardHeader>\r\n                            <CardBody>\r\n                                <ReactTable\r\n                                    data={taskList}\r\n                                    columns={columns}\r\n                                    defaultPageSize={10}\r\n                                    className=\"-striped -highlight\"\r\n                                />\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Modal isOpen={newModal} toggle={this.newToggle}>\r\n                    <ModalHeader>New Task</ModalHeader>\r\n                    <ModalBody>\r\n                        <FormGroup className=\"mb-2 mr-sm-2 \">\r\n                            <Label className=\"mr-sm-2\">Task Code: </Label>\r\n                            <Input name=\"code\" placeholder=\"Input...\" onChange={this.onUpdateHandleChange}/>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-2 mr-sm-2 \">\r\n                            <Label className=\"mr-sm-2\">Task Name: </Label>\r\n                            <Input name=\"title\" placeholder=\"Input...\"  onChange={this.onUpdateHandleChange}/>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-2 mr-sm-2 \">\r\n                            <Label className=\"mr-sm-2\">Description: </Label>\r\n                            <Input name=\"description\" placeholder=\"Input...\"  onChange={this.onUpdateHandleChange}/>\r\n                        </FormGroup>\r\n                        \r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button  outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={this.newToggle}>Cancel</Button>\r\n                        <Button color=\"secondary\" onClick={this.newTask}>Create</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <Modal isOpen={editModal} toggle={this.editToggle}>\r\n                    <ModalHeader>Update Task</ModalHeader>\r\n                    <ModalBody>\r\n                        <FormGroup className=\"mb-2 mr-sm-2 \">\r\n                            <Label className=\"mr-sm-2\">Task Name: </Label>\r\n                            <Input name=\"title\" placeholder=\"Input...\" value={selectedTask?selectedTask.title:''} onChange={this.onUpdateHandleChange}/>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-2 mr-sm-2 \">\r\n                            <Label className=\"mr-sm-2\">Description: </Label>\r\n                            <Input name=\"description\" placeholder=\"Input...\" value={selectedTask?selectedTask.description:''} onChange={this.onUpdateHandleChange}/>\r\n                        </FormGroup>\r\n                        \r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button  outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={this.editToggle}>Cancel</Button>\r\n                        <Button color=\"secondary\" onClick={this.editTask}>Update</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <Modal isOpen={deleteModal} toggle={this.deleteToggle}>\r\n                    <ModalHeader>Delete Confirm</ModalHeader>\r\n                    <ModalBody>Do you want to delete current task?</ModalBody>\r\n                    <ModalFooter>\r\n                        <Button  outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={this.deleteToggle}>Cancel</Button>\r\n                        <Button color=\"secondary\" onClick={this.deleteTask}>Confirm</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { loggingIn } = state.authentication;\r\n    return {\r\n        loggingIn\r\n    };\r\n}\r\n\r\nconst connectedTasksPage = connect(mapStateToProps)(TasksPage);\r\nexport { connectedTasksPage as TasksPage }; ","import React, {Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Col, Row, Button,\r\n    Card, CardBody,CardHeader,\r\n    Modal, ModalHeader, ModalFooter, ModalBody,\r\n    } from 'reactstrap';\r\nimport ReactTable from \"react-table\";\r\nimport { saveSync } from 'save-file';\r\n\r\nimport moment from 'moment';\r\n\r\nimport Api from '../../Api';\r\n\r\nclass HistoryPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loadURL: '',\r\n            selectedHistory:null,\r\n            selectedWork: null,\r\n            historyList: [],\r\n            currentHistory: {\r\n                _id: -1,\r\n                title: '',\r\n                description: '',\r\n                start: moment(new Date).format('HH: mm'),\r\n                end: moment(new Date).format('HH: mm'),\r\n                hour: '0 mins',\r\n            },\r\n            deleteModal: false\r\n        };\r\n\r\n        this.toggle = this.toggle.bind(this);        \r\n        this.deleteToggle = this.deleteToggle.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        const option = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }\r\n\r\n        Api.apiFetch('/admin/loadhistory', option)\r\n        .then(data => {\r\n            this.setState({historyList: data.result})\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n\r\n    }\r\n\r\n    toggle(event) {\r\n\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n\r\n    handleChange(selectedHistory){\r\n        this.setState({selectedHistory})\r\n        const temp = this.state.historyList.filter(history => history._id ===selectedHistory.value)\r\n        this.setState({currentHistory: temp[0]})\r\n    }\r\n\r\n    onHandleChange(e){\r\n        const {name, value} = e.target;\r\n\r\n        const {currentHistory} = this.state\r\n    \r\n        this.setState({\r\n            currentHistory: {\r\n                ...currentHistory,\r\n                [name]: value\r\n            }\r\n        })\r\n        \r\n    }\r\n    onHandleWorkChange(e){\r\n        const {name, value} = e.target;\r\n        const {selectedHistory} = this.state\r\n        this.setState({\r\n            selectedHistory: {\r\n                ...selectedHistory,\r\n                [name]: value\r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n    showDeleteConfirmModal(id) {\r\n        const temp = this.state.historyList.filter(history => history._id === id)\r\n        this.setState({selectedHistory: temp[0]})\r\n        this.setState({deleteModal: true})\r\n    }\r\n\r\n    deleteToggle() {\r\n        this.setState({\r\n            deleteModal: !this.state.deleteModal\r\n        });\r\n    }\r\n\r\n    deleteHistory(){\r\n        const {selectedHistory} = this.state;\r\n\r\n        const option = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"content-type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify({...selectedHistory})\r\n        }\r\n\r\n        Api.apiFetch(\"/admin/delete/history\", option)\r\n        .then(data => {\r\n            if (data.status) {\r\n                this.setState({historyList: data.result})\r\n                this.deleteToggle()\r\n            }\r\n        })\r\n        .catch(error =>{})\r\n    }\r\n\r\n    async export2TextHistory() {\r\n        const option = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }\r\n\r\n        Api.apiFetch('/admin/export2TextHistory', option)\r\n        .then(result => {\r\n            if(result.status)\r\n                alert('Successful')\r\n        })\r\n        .catch(error => {\r\n            alert(error)\r\n        })\r\n\r\n        var data=\"sdfsdf\";\r\n\r\n        saveSync(data, 'example2.txt')\r\n    }\r\n\r\n    render() {\r\n       const {deleteModal, historyList} = this.state;\r\n       const columns = [\r\n            {\r\n                Header: 'Date',\r\n                accessor: 'date',\r\n                width: 120\r\n            },\r\n            {\r\n                Header: 'ActivityID',\r\n                accessor: 'taskcode',\r\n                width: 150\r\n            }, \r\n            {\r\n                Header: 'Cust. Co./Last Name',\r\n                accessor: 'lastname',\r\n                width: 150,\r\n                // render: row => (\r\n                //     `${row.Contractor.lastname}`\r\n                // )\r\n            },\r\n            {\r\n                Header: 'Cust. First Name',\r\n                accessor: 'firstname',\r\n                // render: row => (\r\n                //     `${row.Contractor.firstname}`\r\n                // ),\r\n                width: 150\r\n            },\r\n            {\r\n                Header: 'Units',\r\n                accessor: 'hour',\r\n                width: 80\r\n            },\r\n            {\r\n                Header: 'Start Time',\r\n                accessor: 'starttime',\r\n                width: 100\r\n            },\r\n            {\r\n                Header: 'Stop Time',\r\n                accessor: 'endtime',\r\n                width: 100\r\n            },\r\n            \r\n            {\r\n                Header: 'Notes',\r\n                accessor: 'notes',\r\n            },\r\n            {\r\n                Header: 'Emp. Record ID',\r\n                accessor: 'contractor',\r\n                width: 200\r\n            },\r\n            {\r\n                Header: 'Actions',\r\n                id: 'actions',\r\n                width: 80,\r\n                accessor: d =>\r\n                    <Button outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={(e) => this.showDeleteConfirmModal(d._id)}>\r\n                        <i className=\"lnr-trash\"> </i>\r\n                    </Button>\r\n            }\r\n        ]\r\n        return (\r\n            <Fragment>\r\n                <Row className=\"h-100 no-gutters\" style={{\"paddingLeft\": \"20px\", paddingRight: 20}}>\r\n                    <Col md=\"12\" style={{paddingLeft: \"20px\"}}>\r\n                        <Card className=\"main-card mb-3\">\r\n                            <CardHeader className = \"text-right\">\r\n                                History\r\n                                {/* <div className=\"btn-actions-pane-right\">\r\n                                    <Button outline className=\"btn-shadow\" color=\"secondary\" onClick={(e) => this.export2TextHistory()}>\r\n                                    <i className=\"pe-7s-diskette\"> </i>\r\n                                    </Button>\r\n                                </div> */}\r\n                            </CardHeader>\r\n                            <CardBody>\r\n                                <ReactTable\r\n                                    data={historyList}\r\n                                    columns={columns}\r\n                                    defaultPageSize={10}\r\n                                    className=\"-striped -highlight\"\r\n                                />\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n               <Modal isOpen={deleteModal} toggle={this.deleteToggle}>\r\n                    <ModalHeader>Delete Confirm</ModalHeader>\r\n                    <ModalBody>Do you want to delete this history?</ModalBody>\r\n                    <ModalFooter>\r\n                        <Button  outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={this.deleteToggle}>Cancel</Button>\r\n                        <Button color=\"secondary\" onClick={this.deleteHistory}>Confirm</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { loggingIn } = state.authentication;\r\n    return {\r\n        loggingIn\r\n    };\r\n}\r\n\r\nconst connectedHistoryPage = connect(mapStateToProps)(HistoryPage);\r\nexport { connectedHistoryPage as HistoryPage }; ","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {Row, Col, Card, CardHeader, CardBody} from 'reactstrap'\r\n\r\nclass InformationPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Row className=\"h-100 no-gutters\">\r\n                    <Col md={12}>\r\n                        <Card>\r\n                            <CardHeader>\r\n                                InformationPage\r\n                            </CardHeader>\r\n                            <CardBody>\r\n                                <Row>\r\n                                    <Col md={24}>\r\n                                        <ul>\r\n                                            <li>How to get all the contractors and save it to the website</li>\r\n                                            <li>How to get all the tasks and save it to the website</li>\r\n                                            <li>General information on how to use the system</li>\r\n                                        </ul>\r\n                                    </Col>\r\n                                    <Col md={24} style={{textAlign: 'center'}}>\r\n                                        <p>Have you completed all the above steps now it’s time toregister your company.Click the below link to register your company</p>\r\n                                    </Col>\r\n                                </Row>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { loggingIn } = state.authentication;\r\n    return {\r\n        loggingIn\r\n    };\r\n}\r\n\r\nconst connectedInformationPage = connect(mapStateToProps)(InformationPage);\r\nexport { connectedInformationPage as InformationPage }; ","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport  {ContractorPage}  from '../container/ContractorPage';\r\nimport  {DocketsPage}  from '../container/DocketsPage';\r\nimport { TasksPage } from '../container/TasksPage';\r\nimport { HistoryPage } from '../container/HistoryPage';\r\nimport { InformationPage } from '../container/InformationPage';\r\n\r\n\r\nexport default function PagesRoutes() {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/dashboard/users\" component={ContractorPage} />\r\n            <Route path=\"/dashboard/dockets\" component={DocketsPage} />\r\n            <Route path=\"/dashboard/tasks\" component={TasksPage} />\r\n            <Route path=\"/dashboard/history\" component={HistoryPage} />\r\n            <Route path=\"/dashboard/information\" component={InformationPage} />\r\n        </Switch>\r\n    );\r\n}","import React, {Fragment} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {\r\n    DropdownToggle, DropdownMenu,\r\n    Button, UncontrolledButtonDropdown\r\n} from 'reactstrap';\r\n\r\nimport {\r\n    faAngleDown,\r\n\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\n\r\n// import city3 from '../../../assets/utils/images/dropdown-header/city3.jpg';\r\n\r\nclass UserBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n    }\r\n\r\n    render() {\r\n        const {user} = this.props\r\n        return (\r\n            <Fragment>\r\n                <div className=\"header-btn-lg pr-0\">\r\n                    <div className=\"widget-content p-0\">\r\n                        <div className=\"widget-content-wrapper\">\r\n                            <div className=\"widget-content-left\">\r\n                                <UncontrolledButtonDropdown>\r\n                                    <DropdownToggle color=\"link\" className=\"p-0\">\r\n                                        {/* <img width={42} className=\"rounded-circle\" src={avatar1} alt=\"\"/> */}\r\n                                        <FontAwesomeIcon className=\"ml-2 opacity-8\" icon={faAngleDown}/>\r\n                                    </DropdownToggle>\r\n                                    <DropdownMenu right className=\"rm-pointers dropdown-menu-lg\">\r\n                                        <div className=\"dropdown-menu-header\">\r\n                                            <div className=\"dropdown-menu-header-inner bg-info\">\r\n                                                {/* <div className=\"menu-header-image opacity-2\"\r\n                                                     style={{\r\n                                                         backgroundImage: 'url(' + city3 + ')'\r\n                                                     }}\r\n                                                /> */}\r\n                                                <div className=\"menu-header-content text-left\">\r\n                                                    <div className=\"widget-content p-0\">\r\n                                                        <div className=\"widget-content-wrapper\">\r\n                                                            <div className=\"widget-content-left mr-3\">\r\n                                                                {/* <img width={42} className=\"rounded-circle\" src={avatar1}\r\n                                                                     alt=\"\"/> */}\r\n                                                            </div>\r\n                                                            <div className=\"widget-content-left\">\r\n                                                                <div className=\"widget-heading\">\r\n                                                                    {user.username}\r\n                                                                </div>\r\n                                                                \r\n                                                            </div>\r\n                                                            <div className=\"widget-content-right mr-2\">\r\n                                                                <Button className=\"btn-pill btn-shadow btn-shine\"\r\n                                                                        color=\"focus\"\r\n                                                                        onClick={(e) => this.props.logout()}>\r\n                                                                    Logout\r\n                                                                </Button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                       \r\n                                        \r\n                                    </DropdownMenu>\r\n                                </UncontrolledButtonDropdown>\r\n                            </div>\r\n                            <div className=\"widget-content-left  ml-3 header-user-info\">\r\n                                <div className=\"widget-heading\">\r\n                                {user.username}\r\n                                </div>\r\n                                \r\n                            </div>\r\n\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n// export default connect(null, authActions)(UserBox)\r\nexport default connect(null)(UserBox)","import React, {Fragment} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n// import Hamburger from 'react-hamburgers';\r\n\r\n// import AppMobileMenu from '../AppMobileMenu';\r\n\r\n/* import {\r\n    setEnableClosedSidebar,\r\n    setEnableMobileMenu,\r\n    setEnableMobileMenuSmall,\r\n} from '../../reducers/ThemeOptions'; */\r\n// import avatar1 from '../../assets/utils/images/logo-inverse.png';\r\nclass HeaderLogo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active: false,\r\n            mobile: false,\r\n            activeSecondaryMenuMobile: false\r\n        };\r\n\r\n    }\r\n\r\n    /* toggleEnableClosedSidebar = () => {\r\n        let {enableClosedSidebar, setEnableClosedSidebar} = this.props;\r\n        setEnableClosedSidebar(!enableClosedSidebar);\r\n    } */\r\n\r\n    state = {\r\n        openLeft: false,\r\n        openRight: false,\r\n        relativeWidth: false,\r\n        width: 280,\r\n        noTouchOpen: false,\r\n        noTouchClose: false,\r\n    };\r\n\r\n    render() {\r\n        /* let {\r\n            enableClosedSidebar,\r\n        } = this.props; */\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"app-header__logo\">\r\n                    <div className=\"logo-src \">\r\n                        {/* <img src={avatar1} alt=\"logo\"/> */}\r\n                    </div>\r\n                    <div className=\"header__pane ml-auto\">\r\n                        {/* <div onClick={this.toggleEnableClosedSidebar}>\r\n                            <Hamburger\r\n                                active={enableClosedSidebar}\r\n                                type=\"elastic\"\r\n                                onClick={() => this.setState({active: !this.state.active})}\r\n                            />\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n                {/* <AppMobileMenu/> */}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    /* enableClosedSidebar: state.ThemeOptions.enableClosedSidebar,\r\n    enableMobileMenu: state.ThemeOptions.enableMobileMenu,\r\n    enableMobileMenuSmall: state.ThemeOptions.enableMobileMenuSmall, */\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n    /* setEnableClosedSidebar: enable => dispatch(setEnableClosedSidebar(enable)),\r\n    setEnableMobileMenu: enable => dispatch(setEnableMobileMenu(enable)),\r\n    setEnableMobileMenuSmall: enable => dispatch(setEnableMobileMenuSmall(enable)), */\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderLogo);","\r\n// import { userConstants } from './constants';\r\nimport Api from '../../Api'\r\n\r\nconst actions = {\r\n    logout,\r\n};\r\n\r\nconst userConstants = {LOGOUT: 'USERS_LOGOUT'}\r\n\r\nfunction logout() {\r\n    console.log('headerprops', this)\r\n    return dispatch => {\r\n        Api.logout()\r\n        dispatch({ type: userConstants.LOGOUT})\r\n        window.location.reload();\r\n    }\r\n}\r\n\r\nexport default actions;","import React from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\nimport UserBox from './Components/UserBox';\r\n\r\nimport HeaderLogo from '../AppLogo';\r\nimport actions from './actions'\r\n\r\nconst Header = ({ user, logout }) => (\r\n    <div className=\"app-header header-shadow\" >\r\n\r\n        <HeaderLogo />\r\n\r\n        <div className=\"app-header__content\">\r\n            \r\n        </div>\r\n        <div className=\"app-header-right\">\r\n            <UserBox user={user} logout={logout}/>\r\n        </div>\r\n    </div>\r\n  );\r\n\r\nfunction mapStateToProps(state) {\r\n    const { user } = state.authentication;\r\n    return {\r\n        user\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, actions)(Header);","import Api from '../../Api';\r\n\r\nlet MainNav = [];\r\nMainNav = [\r\n    {\r\n        icon: 'lnr-user',\r\n        label: 'Contractors',\r\n        to: '/dashboard/users'\r\n    },\r\n    {\r\n        icon: 'lnr-book',\r\n        label: 'Dockets',\r\n        to: '/dashboard/dockets'\r\n    },\r\n    {\r\n        icon: 'lnr-database',\r\n        label: 'Tasks',\r\n        to: '/dashboard/tasks'\r\n    },    \r\n    {\r\n        icon: 'lnr-database',\r\n        label: 'History',\r\n        to: '/dashboard/history'\r\n    },    \r\n    {\r\n        icon: 'lnr-highlight',\r\n        label: 'Information',\r\n        to: '/dashboard/information'\r\n    }\r\n]\r\nexport default MainNav;\r\n","import React, {Component, Fragment} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nimport MetisMenu from 'react-metismenu';\r\n\r\nimport MainNav from './NavItems';\r\n\r\nclass Nav extends Component {\r\n\r\n    state = {};\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <MetisMenu content={MainNav} activeLinkFromLocation className=\"vertical-nav-menu\" iconNamePrefix=\"\" classNameStateIcon=\"pe-7s-angle-down\"/>\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n    isPathActive(path) {\r\n        return this.props.location.pathname.startsWith(path);\r\n    }\r\n}\r\n\r\nexport default withRouter(Nav);","import React, {Component, Fragment} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Nav from '../AppNav/VerticalNavWrapper';\r\nimport HeaderLogo from '../AppLogo';\r\n\r\nclass AppSidebar extends Component {\r\n\r\n    state = {};\r\n\r\n    toggleMobileSidebar = () => {\r\n        let {enableMobileMenu, setEnableMobileMenu} = this.props;\r\n        setEnableMobileMenu(!enableMobileMenu);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"sidebar-mobile-overlay\" onClick={this.toggleMobileSidebar}/>\r\n                <div className=\"app-sidebar bg-vicious-stance sidebar-shadow sidebar-text-light\">\r\n                    <HeaderLogo/>\r\n                        <div className=\"app-sidebar__inner\">\r\n                            <Nav/>\r\n                        </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppSidebar);","import React, {Fragment, Component} from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AppHeader from '../../Layout/AppHeader';\r\nimport AppSidebar from '../../Layout/AppSidebar';\r\n\r\nclass AppContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"app-container app-theme-white fixed-header\">\r\n                    <AppHeader/>\r\n                    <div className=\"app-main\">\r\n                        <AppSidebar/>\r\n                        <div className=\"app-main__outer\">\r\n                            <div className=\"app-main__inner\">\r\n                                {this.props.children}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> \r\n            </Fragment> \r\n        );\r\n    }\r\n}\r\n\r\nexport default  AppContainer ;","import React, {Fragment, Component} from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport PagesRoutes from '../routes/PagesRoutes';\r\nimport {AppContainer} from './AppContainer'\r\n\r\nclass Pages extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { dispatch } = this.props;\r\n   \r\n  }\r\n\r\n    render() {\r\n        return (\r\n        <Fragment>\r\n            <AppContainer>\r\n                <PagesRoutes />\r\n            </AppContainer>\r\n        </Fragment> \r\n        );\r\n    }\r\n}\r\n\r\nexport default Pages;","import React, {Fragment} from 'react';\r\nimport {Button} from 'reactstrap'\r\nimport {connect} from 'react-redux';\r\n\r\nimport HeaderLogo from '../AppLogo';\r\n\r\nclass WelcomeHeader extends React.Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"app-header header-shadow\">\r\n                    <HeaderLogo/>\r\n\r\n                    <div className=\"app-header__content\">\r\n                        <div className=\"app-header-left\">\r\n                        </div>\r\n                        <div className=\"app-header-right\">\r\n                            <Button color=\"primary\" onClick={(e) => this.props.login()}>Login</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WelcomeHeader);","import React, {Fragment, Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport WelcomeHeader from '../../Layout/WelcomeHeader/';\r\n\r\nimport background from '../../assets/utils/images/bg.jpg';\r\n\r\nclass WelcomePages extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.history.push('/login')\r\n        this.login = this.login.bind(this)\r\n        const { dispatch } = this.props;\r\n    }\r\n\r\n    login() {\r\n        this.props.history.push('/login')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app-container app-theme-white fixed-header\">\r\n            \r\n                <Fragment>\r\n                    <WelcomeHeader login={this.login}/>\r\n                        <img src={background} className=\"full_image\" />\r\n                </Fragment> \r\n            </div> \r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  /* const { alert, maps } = state;\r\n  return {\r\n    alert,\r\n    maps\r\n  }; */\r\n}\r\n\r\nconst connectedWelcomePages = connect()(WelcomePages);\r\nexport { connectedWelcomePages as WelcomePage };","import React, {Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Col, Row, Button, Form, FormGroup, Input} from 'reactstrap';\r\nimport Api from '../../Api'\r\n// import bg3 from '../../assets/utils/images/originals/citynights.jpg';\r\n\r\n\r\nclass InvitePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: {\r\n                email: '',\r\n                password: '',\r\n            },\r\n            submitted: false,\r\n            pdf: null,\r\n            loadURL: ''\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        Api.apiFetchStream('/contractor/loadmsds').then(result=> {\r\n            \r\n                if (result.status !== undefined) {\r\n                    alert(result.message);\r\n                }\r\n                else {\r\n\r\n                    const file = new Blob([result], {\r\n                        type: \"application/pdf\"\r\n                    });\r\n\r\n                    const loadURL = URL.createObjectURL(file);\r\n                    this.setState({ loadURL });\r\n\r\n                }\r\n        })\r\n    }\r\n\r\n    handleChange(e) {\r\n        const { name, value } = e.target;\r\n        const { user } = this.state;\r\n        this.setState({\r\n            user: {\r\n                ...user,\r\n                [name]: value\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        this.setState({ submitted: true });\r\n         const { user } = this.state;\r\n         if(user.username !== '' && user.password !== ''){\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ ...user })\r\n            };\r\n        \r\n            Api.apiFetch('/auth/contractor/login', requestOptions).then(result=> {\r\n                if(result.result)\r\n                    alert(result.result)\r\n                if(result.status){\r\n                    Api.saveUser(result.user)\r\n                    this.props.history.push('/contractor/task')\r\n                }\r\n                else if(!result.result && !result.status)\r\n                    alert(result.message)\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { user, submitted, loadURL } = this.state;\r\n        return (\r\n            <Fragment>\r\n                <div className=\"h-100\">\r\n                    <Row className=\"h-100 no-gutters\">\r\n                        <Col lg=\"12\" md=\"12\" className=\"h-100 d-flex bg-white justify-content-center align-items-center\">\r\n                            <Col lg=\"12\" md=\"10\" sm=\"12\" className=\"mx-auto app-login-box\">\r\n                                <div className=\"app-logo\"/>\r\n                                <h1 className=\"mb-5 text-center\">\r\n                                    <div>Invite</div>\r\n                                </h1>\r\n                                <Col md={10} style={{\"margin\":\"auto\", \"textAlign\": \"center\"}}>\r\n                                    {loadURL !== '' && \r\n                                    <iframe src={loadURL} frameBorder=\"1\" style={ { width: \"100%\", height: \"800px\", margin: \"auto\" } }></iframe>\r\n                                    }\r\n                                </Col>\r\n                                <div>\r\n                                    <Form onSubmit={ (e) => this.handleSubmit(e) }>\r\n                                        <Row form>\r\n                                            <Col md={4} style={{\"margin\":\"auto\"}}>\r\n                                                <Col md={12}>\r\n                                                    <FormGroup>\r\n                                                        <Input type=\"text\" name=\"username\" \r\n                                                            placeholder=\"UserName here...\"\r\n                                                            value={user.username} onChange={this.handleChange}\r\n                                                        />\r\n                                                        {submitted && !user.username &&\r\n                                                        <div className=\"help-block\">Username is required</div>\r\n                                                        }\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                                <Col md={12}>\r\n                                                    <FormGroup>\r\n                                                        <Input type=\"password\" name=\"password\"\r\n                                                            placeholder=\"Password here...\"\r\n                                                            value={user.password} onChange={this.handleChange}\r\n                                                        />\r\n                                                        {submitted && !user.password &&\r\n                                                        <div className=\"help-block\">Password is required</div>\r\n                                                        }\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                                <Col md={12}>\r\n                                                    <FormGroup>\r\n                                                        <input type=\"checkbox\" id=\"accept\" required />\r\n                                                        <label for=\"accept\">Accept</label>\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                                <Col md={12} className=\"text-center mt-3\">\r\n                                                    <Button color=\"primary\" size=\"lg\" block >Login</Button>\r\n                                                </Col>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Form>\r\n                                </div>\r\n                                \r\n                            </Col>\r\n                        </Col>\r\n                        {/* <Col lg=\"5\" className=\"d-none d-lg-block\">\r\n                            <div className=\"slider-light\">\r\n                            <img src={bg3} className=\"full_image\" />\r\n                            </div>\r\n                        </Col> */}\r\n                        \r\n                    </Row>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { loggingIn } = state.authentication;\r\n    return {\r\n        loggingIn\r\n    };\r\n}\r\n\r\n// const connectedInvitePage = connect(mapStateToProps)(InvitePage);\r\n// export { connectedInvitePage as InvitePage }; \r\n\r\nexport default connect(mapStateToProps)(InvitePage)","export const userConstants = {\r\n    REGISTER_REQUEST: 'USERS_REGISTER_REQUEST',\r\n    REGISTER_SUCCESS: 'USERS_REGISTER_SUCCESS',\r\n    REGISTER_FAILURE: 'USERS_REGISTER_FAILURE',\r\n\r\n    LOGIN_REQUEST: 'USERS_LOGIN_REQUEST',\r\n    LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\r\n    LOGIN_FAILURE: 'USERS_LOGIN_FAILURE',\r\n\r\n    LOGOUT: 'USERS_LOGOUT',\r\n\r\n    GETALL_REQUEST: 'USERS_GETALL_REQUEST',\r\n    GETALL_SUCCESS: 'USERS_GETALL_SUCCESS',\r\n    GETALL_FAILURE: 'USERS_GETALL_FAILURE',\r\n\r\n    DELETE_REQUEST: 'USERS_DELETE_REQUEST',\r\n    DELETE_SUCCESS: 'USERS_DELETE_SUCCESS',\r\n    DELETE_FAILURE: 'USERS_DELETE_FAILURE'\r\n};","\r\nimport { userConstants } from './constants';\r\nimport Api from '../../Api'\r\n\r\nconst actions = {\r\n    login,\r\n    register\r\n};\r\n\r\nfunction login(user) {\r\n    console.log('user', this);\r\n    return dispatch => {\r\n        dispatch(request({ user }));\r\n        \r\n        if(user.username !== '' && user.password !== ''){\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ ...user })\r\n            };\r\n        \r\n            Api.apiFetch('/auth/admin/login', requestOptions)\r\n            .then(result => {\r\n                if(result.success){\r\n                    Api.saveToken(result.token)\r\n                    Api.saveUser(result.user)\r\n                    dispatch(success(result.user));\r\n                    this.history.push('/dashboard/users')\r\n                    return true;\r\n                }\r\n                else{\r\n                    alert(result.message)\r\n                    return false;\r\n                }\r\n            })\r\n            \r\n        }\r\n    };\r\n\r\n    function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\r\n    function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\r\n}\r\n\r\nfunction register(user) {\r\n    return dispatch => {\r\n        dispatch(request(user));\r\n\r\n        // userService.register(user)\r\n        //     .then(\r\n        //         user => {\r\n        //             dispatch(success());\r\n        //             this.props.history.push('/login');\r\n        //         },\r\n        //         error => {\r\n        //             dispatch(failure(error.toString()));\r\n        //         }\r\n        //     );\r\n    };\r\n\r\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\r\n}\r\n\r\nexport default actions;","import React, {Fragment} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {Col, Row, Button, Form, FormGroup, Input} from 'reactstrap';\r\nimport actions from './actions';\r\nimport bg3 from '../../assets/utils/images/originals/citynights.jpg';\r\n\r\n\r\nclass LoginPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: {\r\n                username: '',\r\n                password: '',\r\n            },\r\n            submitted: false\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        const { name, value } = e.target;\r\n        const { user } = this.state;\r\n        this.setState({\r\n            user: {\r\n                ...user,\r\n                [name]: value\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        this.setState({ submitted: true });\r\n        const { user } = this.state;\r\n     \r\n        this.props.login(user)\r\n        \r\n    }\r\n\r\n    render() {\r\n        const { loggedIn } = this.props;\r\n        const { user, submitted } = this.state;\r\n        return (\r\n            <Fragment>\r\n                <div className=\"h-100\">\r\n                    <Row className=\"h-100 no-gutters\">\r\n                    <Col lg=\"4\" md=\"12\" className=\"h-100 d-flex bg-white justify-content-center align-items-center\">\r\n                            <Col lg=\"12\" md=\"10\" sm=\"12\" className=\"mx-auto app-login-box\">\r\n                                <div className=\"app-logo\"/>\r\n                                <h1 className=\"mb-5 text-center\"> ADMIN </h1>\r\n                                <div>\r\n                                    { loggedIn ? '' :\r\n                                    <Form className=\"form\" onSubmit={ (e) => this.handleSubmit(e) }>\r\n                                        <Row form>\r\n                                            <Col md={6} style={{\"margin\":\"auto\"}}>\r\n                                                <Col md={12}>\r\n                                                    <FormGroup>\r\n                                                        <Input type=\"input\" name=\"username\"\r\n                                                            placeholder=\"Username here...\"\r\n                                                            value={user.username} onChange={this.handleChange}\r\n                                                        />\r\n                                                        {submitted && !user.username &&\r\n                                                        <div className=\"help-block\">Username is required</div>\r\n                                                        }\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                                <Col md={12}>\r\n                                                    <FormGroup>\r\n                                                        <Input type=\"password\" name=\"password\"\r\n                                                            placeholder=\"Password here...\"\r\n                                                            value={user.password} onChange={this.handleChange}\r\n                                                        />\r\n                                                        {submitted && !user.password &&\r\n                                                        <div className=\"help-block\">Password is required</div>\r\n                                                        }\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                                <Col md={12} className=\"text-center mt-3\">\r\n                                                    <Button color=\"primary\" size=\"lg\" block >Login</Button>\r\n                                                </Col>\r\n                                                <Col md={12} className=\"text-center mt-3\">\r\n                                                    <h6 className=\"mt-3\">\r\n                                                        No account?{' '}\r\n                                                        <Link to=\"/company/instruction\" className=\"btn btn-link\">SignUp Now</Link>\r\n                                                    </h6>\r\n                                                </Col>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <div className=\"d-flex align-items-center\">\r\n                                            <div className=\"ml-auto\">\r\n                                            </div>\r\n                                        </div>\r\n                                    </Form>\r\n                                    }\r\n                                </div>\r\n                                \r\n                            </Col>\r\n                        </Col>\r\n                        <Col lg=\"8\" className=\"d-none d-lg-block\">\r\n                            <div className=\"slider-light\">\r\n                            <img src={bg3} className=\"full_image\" />\r\n                            </div>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, actions)(LoginPage)","import React, {Fragment} from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Api from '../../Api'\r\nimport bg3 from '../../assets/utils/images/originals/citynights.jpg';\r\n\r\nimport {Col, Row, Button, Form, FormGroup, Label, Input} from 'reactstrap';\r\n\r\nclass RegisterPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: {\r\n                username: '',\r\n                email: '',\r\n                // phone: '',\r\n                password: '',\r\n                repeatpassword: '',\r\n            },\r\n            validation: {\r\n                username: '',\r\n                email: '',\r\n                // phone: '',\r\n                password: '',\r\n                repeatpassword: '',\r\n            },\r\n            submitted: false,\r\n            checkpassword: false\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const { name, value } = event.target;\r\n        const { user } = this.state;\r\n        this.setState({\r\n            user: {\r\n                ...user,\r\n                [name]: value\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        this.setState({ submitted: true });\r\n        const { user } = this.state;\r\n        this.setState({ submitted: true });\r\n        \r\n        console.log('first')\r\n        if (user.username !== '' && user.eamil !== '' && user.repeatpassword !== '' && user.password !== '') {     \r\n            console.log('all')\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ ...user })\r\n            };\r\n            if(user.repeatpassword === user.password)   \r\n                Api.apiFetch('/auth/admin/register', requestOptions)\r\n                .then(result=> {\r\n                    if(result.status){\r\n                        this.setState({user: result.user})\r\n                        this.props.history.push('/login')\r\n                    }\r\n                    else\r\n                        this.setState({validation: result})\r\n                    if(result.result)\r\n                    alert(result.result)\r\n                })\r\n                .catch(error => {\r\n                    alert(error)\r\n                })\r\n            else this.setState({checkpassword: true})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { user, submitted, validation } = this.state;\r\n        return (\r\n            <Fragment>\r\n            <div className=\"h-100\">\r\n                <Row className=\"h-100 no-gutters\">\r\n                    <Col lg=\"4\" md=\"12\" className=\"h-100 d-md-flex d-sm-block bg-white justify-content-center align-items-center\">\r\n                        <Col lg=\"12\" md=\"10\" sm=\"12\" className=\"mx-auto app-login-box\">\r\n                            <div className=\"app-logo\"/>\r\n                            <h1 className=\"text-center\">\r\n                                <div>WELCOME</div>\r\n                            </h1>\r\n                            <div>\r\n                                <Form>\r\n                                    <Row form>\r\n                                        <Col md={12}>\r\n                                            <FormGroup className={submitted && !user.username ? ' has-error' : ''}>\r\n                                                <Label for=\"exampleName\"><span className=\"text-danger\">*</span>\r\n                                                    {' '}User Name</Label>\r\n                                                <Input type=\"text\" name=\"username\" id=\"exampleName\"\r\n                                                       placeholder=\"Name here...\"\r\n                                                       value={user.username} onChange={this.handleChange}/>\r\n                                                {submitted && !user.username &&\r\n                                                <div className=\"help-block\">UserName is required</div>\r\n                                                }\r\n                                               {submitted && validation.username &&\r\n                                                <div className=\"help-block\">{validation.username}</div>\r\n                                                }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col md={12}>\r\n                                            <FormGroup className={submitted && !user.email ? ' has-error' : ''}>\r\n                                                <Label for=\"exampleEmail\">\r\n                                                    <span className=\"text-danger\">*</span>\r\n                                                    {' '}Email\r\n                                                </Label>\r\n                                                <Input type=\"email\" name=\"email\" id=\"exampleEmail\"\r\n                                                       placeholder=\"Email here...\"\r\n                                                       value={user.email} onChange={this.handleChange}/>\r\n                                                {submitted && !user.email &&\r\n                                                <div className=\"help-block\">Email is required</div>\r\n                                                }\r\n                                                 {submitted && validation.email &&\r\n                                                <div className=\"help-block\">{validation.email}</div>\r\n                                                }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col md={12}>\r\n                                            <FormGroup className={submitted && !user.password ? ' has-error' : ''}>\r\n                                                <Label for=\"examplePassword\">\r\n                                                    <span className=\"text-danger\">*</span>\r\n                                                    {' '}Password\r\n                                                </Label>\r\n                                                <Input type=\"password\" name=\"password\" id=\"examplePassword\"\r\n                                                       placeholder=\"Password here...\"\r\n                                                       value={user.password} onChange={this.handleChange}/>\r\n                                                {submitted && !user.password &&\r\n                                                <div className=\"help-block\">Password is required</div>\r\n                                                }\r\n                                                 {submitted && validation.password &&\r\n                                                <div className=\"help-block\">{validation.password}</div>\r\n                                                }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col md={12} className={submitted && !user.repeatpassword ? ' has-error' : ''}>\r\n                                            <FormGroup>\r\n                                                <Label for=\"examplePasswordRep\">\r\n                                                    <span className=\"text-danger\">*</span>\r\n                                                    {' '}Repeat Password\r\n                                                </Label>\r\n                                                <Input type=\"password\" name=\"repeatpassword\" id=\"examplePasswordRep\"\r\n                                                       placeholder=\"Repeat Password here...\"\r\n                                                       value={user.repeatpassword} onChange={this.handleChange}/>\r\n                                                {submitted && !user.repeatpassword &&\r\n                                                <div className=\"help-block\">Password is not correct</div>\r\n                                                }\r\n                                                {this.state.checkpassword && \r\n                                                <div className=\"help-block\">Reapeat Password is not correct</div>\r\n                                                }\r\n                                                {submitted && validation.repeatpassword &&\r\n                                                <div className=\"help-block\">{validation.repeatpassword}</div>\r\n                                                }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    {/* <FormGroup className=\"mt-3\" check>\r\n                                        <Input type=\"checkbox\" name=\"check\" id=\"exampleCheck\"/>\r\n                                        <Label for=\"exampleCheck\" check>Accept our <a href=\"javascript:void(0);\">Terms and Conditions</a>.</Label>\r\n                                    </FormGroup> */}\r\n                                    <div className=\"mt-4 d-flex text-center align-items-center\" style={{float: 'right'}}>\r\n                                            <Button color=\"primary\" className=\"btn-wide btn-pill btn-shadow btn-hover-shine\" size=\"lg\" onClick={this.handleSubmit}>Create Account</Button>\r\n                                        \r\n                                    </div>\r\n                                    <div className=\"mt-4 d-flex text-center align-items-center\">\r\n                                        <h5 className=\"mb-0\">\r\n                                                Already have an account?{' '}\r\n                                                <Link to=\"/login\" className=\"btn btn-link\">Sign In</Link>\r\n                                            </h5>\r\n                                    </div>\r\n                                </Form>\r\n                            </div>\r\n                        </Col>\r\n                    </Col>\r\n                    <Col lg=\"8\" className=\"d-lg-flex d-xs-none\">\r\n                        <div className=\"slider-light\">\r\n                            <img src={bg3} className=\"full_image\"></img>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// const connectedRegisterPage = connect()(RegisterPage);\r\n// export { connectedRegisterPage as RegisterPage };\r\n\r\nexport default connect()(RegisterPage)","import React, {Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Col, Row, Button,\r\n    Card, CardBody,CardHeader,\r\n    Modal, ModalHeader, ModalFooter, ModalBody,\r\n    FormGroup,Input,  Form, Label,\r\n    } from 'reactstrap';\r\nimport DatePicker from 'react-datepicker'\r\nimport ReactTable from \"react-table\";\r\nimport Select from 'react-select';\r\n\r\nimport moment from 'moment'\r\n\r\nimport API from '../../Api'\r\n// import { SignContainer, PdfContainer, SignButton } from './styles';\r\nimport Api from '../../Api';\r\n// import makeAnimated from 'react-select/lib/animated';\r\n\r\nclass TaskPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loadURL: '',\r\n            signing: false,\r\n            signed: false,\r\n            pdf: null,\r\n            dropdownOpen: false,\r\n            selectedTask:null,\r\n            selectedWork: null,\r\n            selectedStartTime: new Date(),\r\n            selectedEndTime: new Date(),\r\n            selectedLunchTime: new Date(),\r\n            user: null,\r\n            taskList: [],\r\n            workList: [],\r\n            currentTask: {\r\n                _id: -1,\r\n                title: '',\r\n                description: '',\r\n                start: moment(new Date).format('HH: mm'),\r\n                end: moment(new Date).format('HH: mm'),\r\n                hour: '0 mins',\r\n            },\r\n            lunchTime: {\r\n                lunch: moment(new Date).format('HH: mm'),\r\n                lunchhour: ''\r\n            },\r\n            editModal: false,\r\n            deleteModal: false,\r\n            sendModal: false\r\n        };\r\n\r\n        \r\n        this.tasktemp = []\r\n        this.sigPad = {};\r\n\r\n        this.toggle = this.toggle.bind(this);        \r\n        this.editToggle = this.editToggle.bind(this)\r\n        this.deleteToggle = this.deleteToggle.bind(this)\r\n        this.sendToggle = this.sendToggle.bind(this)\r\n        this.onHandleChange = this.onHandleChange.bind(this);\r\n        this.onHandleLunchChange = this.onHandleLunchChange.bind(this);\r\n        this.onHandleWorkChange = this.onHandleWorkChange.bind(this);\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({user: Api.getCurrentUser()})\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {user} = this.state\r\n        const option = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }\r\n\r\n        API.apiFetch('/contractor/loadtask', option)\r\n        .then(data => {\r\n            this.setState({taskList: data.result})\r\n            data = data.result\r\n            for(let i = 0 ; i < data.length; i ++) {\r\n                this.tasktemp.push({\r\n                    value: data[i]._id,\r\n                    label: data[i].title\r\n                })\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n\r\n        const option1 = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({...user})\r\n        }\r\n\r\n        API.apiFetch('/contractor/loadworkaday', option1)\r\n        .then(data => {\r\n            this.setState({workList: data.result})\r\n            \r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n        \r\n    }\r\n\r\n    toggle(event) {\r\n\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n\r\n    handleChange(selectedTask){\r\n        this.setState({selectedTask})\r\n        const temp = this.state.taskList.filter(task => task._id ===selectedTask.value)\r\n        this.setState({currentTask: temp[0]})\r\n    }\r\n\r\n    onHandleChange(e){\r\n        const {name, value} = e.target;\r\n\r\n        const {currentTask} = this.state\r\n    \r\n        this.setState({\r\n            currentTask: {\r\n                ...currentTask,\r\n                [name]: value\r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n    onHandleStartTimeChange(time) {\r\n        const {currentTask, selectedEndTime} = this.state\r\n\r\n        this.setState({selectedStartTime: time})\r\n\r\n        let hour = ''\r\n        var hrs = Math.floor(moment(selectedEndTime).diff(moment(time), 'minutes') / 60);\r\n        if(hrs > 0)\r\n            hour =hrs + 'hr ' + moment(selectedEndTime).diff(moment(time), 'minutes') % 60 + 'mins';\r\n        else hour = moment(selectedEndTime).diff(moment(time), 'minutes') % 60 + 'mins';\r\n\r\n        this.setState({\r\n            currentTask: {\r\n                ...currentTask,\r\n                ['start']: moment(time).format('HH:mm'),\r\n                ['hour']: hour\r\n            }\r\n        })\r\n    }\r\n\r\n    onHandleEndTimeChange(time) {\r\n        const {currentTask, selectedStartTime} = this.state\r\n\r\n        \r\n\r\n        this.setState({selectedEndTime: time});\r\n        \r\n        let hour = ''\r\n        var hrs = Math.floor(moment(time).diff(moment(selectedStartTime), 'minutes') / 60);\r\n        if(hrs > 0)\r\n            hour =hrs + 'hr ' + moment(time).diff(moment(selectedStartTime), 'minutes') % 60 + 'mins';\r\n        else hour = moment(time).diff(moment(selectedStartTime), 'minutes') % 60 + 'mins';\r\n\r\n        this.setState({\r\n            currentTask: {\r\n                ...currentTask,\r\n                ['end']: moment(time).format('HH:mm'),\r\n                ['hour']: hour\r\n            }\r\n        })\r\n    }\r\n    \r\n    onHandleWorkChange(e){\r\n        const {name, value} = e.target;\r\n        const {selectedWork} = this.state\r\n        this.setState({\r\n            selectedWork: {\r\n                ...selectedWork,\r\n                [name]: value\r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n    onHandleLunchTimeChange(time) {\r\n        const {lunchTime} = this.state\r\n\r\n        this.setState({\r\n            lunchTime: {\r\n                ...lunchTime,\r\n                ['lunch']: moment(time).format('HH:mm')\r\n            }\r\n        })\r\n\r\n        this.setState({selectedLunchTime: time})\r\n    }\r\n\r\n    onHandleLunchChange(e){\r\n        const {name, value} = e.target;\r\n        const {lunchTime} = this.state\r\n        this.setState({\r\n            lunchTime: {\r\n                ...lunchTime,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n    saveTask() {\r\n        const {currentTask, user} = this.state;\r\n        \r\n        // var userid = user._id\r\n        if(currentTask.hour !== undefined && currentTask.start !== undefined && currentTask.end !== undefined && currentTask._id !== -1){\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({task:{...currentTask}, user: {...user} })\r\n            };\r\n            \r\n            API.apiFetch('/contractor/savetask', requestOptions)\r\n            .then(data => {\r\n                this.setState({workList: data.result})\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n        }\r\n        else {\r\n            alert(\"Please fill up all inputs\")\r\n        }\r\n    }\r\n\r\n    saveLunch() {\r\n        const {lunchTime, user} = this.state;\r\n        console.log('lunch', lunchTime.lunch)\r\n        if(lunchTime.lunchhour !== undefined && lunchTime.lunch !== undefined){\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({...lunchTime, ...user })\r\n            };\r\n            API.apiFetch('/contractor/savelunch', requestOptions)\r\n            .then(data => {\r\n                this.setState({workList: data.result})\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n        }\r\n        else alert('Please fill up')\r\n    }\r\n\r\n   \r\n\r\n    loadPDF() {\r\n        const {workList, user} = this.state\r\n\r\n        this.sendToggle();\r\n        if(workList !== []){\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({user})\r\n            };\r\n           \r\n            /* Api.apiFetchStream('/contractor/loaddoc', requestOptions)\r\n            .then(response => {\r\n                //Create a Blob from the PDF Stream\r\n                console.log(response);    \r\n                const file = new Blob([response], {\r\n                    type: \"application/pdf\"\r\n                });\r\n                //Build a URL from the file\r\n                const loadURL = URL.createObjectURL(file);\r\n                //Open the URL on new Window\r\n                console.log(loadURL);\r\n                this.setState({loadURL});\r\n                \r\n                this.blob2arraybuffer(file)\r\n    \r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            }); */\r\n            Api.apiFetch('/contractor/loaddoc', requestOptions)\r\n            .then(response => {\r\n                console.log(response)\r\n                \r\n                if(response.status)\r\n                    alert(\"Send successful\");\r\n                else alert(\"Sent already. You can't send again\");\r\n                \r\n            })\r\n        }\r\n        else {\r\n            alert(\"No data\")\r\n        }\r\n    }\r\n\r\n    async blob2arraybuffer(file) {\r\n        var load = await file.arrayBuffer();\r\n        this.setState({pdf: load})\r\n    }\r\n\r\n    makeblob = function (dataURL) {\r\n        var BASE64_MARKER = ';base64,';\r\n        var parts;\r\n        var contentType;\r\n        var raw;\r\n        if (dataURL.indexOf(BASE64_MARKER) === -1) {\r\n            parts = dataURL.split(',');\r\n            contentType = parts[0].split(':')[1];\r\n            raw = decodeURIComponent(parts[1]);\r\n            return new Blob([raw], { type: contentType });\r\n        }\r\n        parts = dataURL.split(BASE64_MARKER);\r\n        contentType = parts[0].split(':')[1];\r\n        raw = window.atob(parts[1]);\r\n        var rawLength = raw.length;\r\n\r\n        var uInt8Array = new Uint8Array(rawLength);\r\n\r\n        for (var i = 0; i < rawLength; ++i) {\r\n            uInt8Array[i] = raw.charCodeAt(i);\r\n        }\r\n        return new Blob([uInt8Array], { type: contentType });\r\n    }\r\n\r\n    loadAllWork() {\r\n        const {user} = this.state\r\n        var userid = user._id\r\n        const option = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({userid})\r\n        }\r\n\r\n        API.apiFetch('/contractor/loadworkall', option)\r\n        .then(data => {\r\n            this.setState({workList: data.result})\r\n            \r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    showEditContractorModal(id) {\r\n        const temp = this.state.workList.filter(work => work._id === id)\r\n        this.setState({selectedWork: temp[0]})\r\n        this.setState({editModal: true})\r\n    }\r\n    \r\n    showDeleteConfirmModal(id) {\r\n        const temp = this.state.workList.filter(work => work._id === id)\r\n        this.setState({selectedWork: temp[0]})\r\n        this.setState({deleteModal: true})\r\n    }\r\n\r\n    showSendConfirmModal(id) {\r\n        this.setState({sendModal: true})\r\n    }\r\n\r\n    editToggle() {\r\n        this.setState({\r\n            editModal: !this.state.editModal\r\n        });\r\n    }\r\n\r\n    deleteToggle() {\r\n        this.setState({\r\n            deleteModal: !this.state.deleteModal\r\n        });\r\n    }\r\n\r\n    sendToggle() {\r\n        this.setState({\r\n            sendModal: !this.state.sendModal\r\n        });\r\n    }\r\n\r\n    editWork =() => {\r\n        const {selectedWork} = this.state;\r\n\r\n        const option = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"content-type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify({...selectedWork})\r\n        }\r\n\r\n        Api.apiFetch(\"/contractor/editwork\", option)\r\n        .then(data => {\r\n            if (data.status) {\r\n                this.setState({workList: data.result})\r\n                this.editToggle()\r\n            }\r\n        })\r\n        .catch(error =>{})\r\n    }\r\n    deleteWork =() => {\r\n        const {selectedWork} = this.state;\r\n\r\n        const option = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"content-type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify({...selectedWork})\r\n        }\r\n\r\n        Api.apiFetch(\"/contractor/deletework\", option)\r\n        .then(data => {\r\n            if (data.status) {\r\n                this.setState({workList: data.result})\r\n                this.deleteToggle()\r\n            }\r\n        })\r\n        .catch(error =>{})\r\n    }\r\n\r\n    render() {\r\n       const {selectedTask, currentTask, loadURL, workList, editModal, deleteModal, sendModal, selectedWork} = this.state;\r\n       const columns = [\r\n        {\r\n            Header: 'TaskCode',\r\n            accessor: 'taskcode'\r\n        }, \r\n        {\r\n            Header: 'Title',\r\n            accessor: 'tasktitle'\r\n        }, \r\n        {\r\n            Header: 'Start',\r\n            accessor: 'starttime'\r\n        },\r\n        {\r\n            Header: 'End',\r\n            accessor: 'endtime'\r\n        },\r\n        {\r\n            Header: 'Lunch',\r\n            accessor: 'lunchtime'\r\n        },\r\n        {\r\n            Header: 'Hour',\r\n            accessor: 'hour'\r\n        },\r\n        {\r\n            Header: 'Notes',\r\n            accessor: 'notes'\r\n        },\r\n        {\r\n            Header: 'Actions',\r\n            id: 'actions',\r\n            accessor: d =>\r\n                <div>\r\n                <Button outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={(e) => this.showEditContractorModal(d._id)}>\r\n                    <i className=\"lnr-pencil\"> </i>\r\n                </Button>\r\n                <Button outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={(e) => this.showDeleteConfirmModal(d._id)}>\r\n                    <i className=\"lnr-trash\"> </i>\r\n                </Button>\r\n                </div>\r\n        }\r\n    ]\r\n        return (\r\n            <Fragment>\r\n                <Row className=\"h-100 no-gutters\" style={{\"paddingLeft\": \"20px\", paddingRight: 20}}>\r\n                    <Col md=\"4\">\r\n                        <Card>\r\n                            <CardHeader>Task Management</CardHeader>\r\n                            <CardBody>\r\n                                <FormGroup>\r\n                                    <Label >Title: </Label>\r\n                                    <Select\r\n                                        value={selectedTask}\r\n                                        onChange={this.handleChange.bind(this)}\r\n                                        options={this.tasktemp}\r\n                                    />\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label >Description: </Label>\r\n                                    <Input className=\"mb-2 mr-sm-2 \" value={currentTask?currentTask.description:''} readOnly></Input>\r\n                                </FormGroup>\r\n                                <Form>\r\n                                    <FormGroup className=\"mb-2 mr-sm-2 \">\r\n                                        <Label className=\"mr-sm-2\">Start Time: </Label>\r\n                                        <DatePicker\r\n                                            selected={this.state.selectedStartTime}\r\n                                            onChange={this.onHandleStartTimeChange.bind(this)}\r\n                                            showTimeSelect\r\n                                            showTimeSelectOnly\r\n                                            className=\"form-control\"\r\n                                            timeIntervals={15}\r\n                                            timeCaption=\"Time\"\r\n                                            dateFormat=\"h:mm aa\"\r\n                                        />\r\n                                        {/* <Input name=\"start\" placeholder=\"12:59 am\" value={currentTask && currentTask.start ? currentTask.start : ''} onChange={this.onHandleChange}/> */}\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"mb-2 mr-sm-2 \">\r\n                                        <Label className=\"mr-sm-2\">End Time: </Label>\r\n                                        <DatePicker\r\n                                            selected = {this.state.selectedEndTime}\r\n                                            onChange={this.onHandleEndTimeChange.bind(this)}\r\n                                            showTimeSelect\r\n                                            showTimeSelectOnly\r\n                                            className=\"form-control\"\r\n                                            timeIntervals={15}\r\n                                            timeCaption=\"Time\"\r\n                                            dateFormat=\"h:mm aa\"\r\n                                        />\r\n                                        {/* <InputMask className=\"form-control\" mask=\"99:99\" defaultValue=\"24:59\" /> */}\r\n                                        {/* <Input name=\"end\" placeholder=\"12:59 am\" value={currentTask && currentTask.end ? currentTask.end : ''} onChange={this.onHandleChange}/> */}\r\n                                    </FormGroup>\r\n                                    \r\n                                    <FormGroup className=\"mb-2 mr-sm-2 \">\r\n                                        <Label className=\"mr-sm-2\">Hour: </Label>\r\n                                        <Input name=\"hour\" value={currentTask && currentTask.hour ? currentTask.hour : ''} className=\"form-control\" readOnly></Input>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label >Notes: </Label>\r\n                                        <Input name=\"notes\" className=\"mb-2 mr-sm-2 \" value={currentTask && currentTask.notes ? currentTask.notes : ''} onChange={this.onHandleChange}></Input>\r\n                                    </FormGroup>\r\n                                    <Row style={{float: \"right\"}}>\r\n                                    <Button type=\"button\" color=\"secondary\" className=\"mr-5\" onClick={this.saveTask.bind(this)}>Save</Button>\r\n                                    </Row>\r\n                                </Form>\r\n                        \r\n                            </CardBody>\r\n                        </Card>\r\n                        <Card className=\"mt-3\">\r\n                            <CardHeader>Lunch Time</CardHeader>\r\n                            <CardBody>\r\n                                <Form>\r\n                                    <FormGroup className=\"mb-2\">\r\n                                        <Label className=\"mr-sm-2\">Lunch Time: </Label>\r\n                                        <DatePicker\r\n                                            selected={this.state.selectedLunchTime}\r\n                                            onChange={this.onHandleLunchTimeChange.bind(this)}\r\n                                            showTimeSelect\r\n                                            showTimeSelectOnly\r\n                                            className=\"form-control\"\r\n                                            timeIntervals={15}\r\n                                            timeCaption=\"Time\"\r\n                                            dateFormat=\"h:mm aa\"\r\n                                        />\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"mb-2 \">\r\n                                        <Label className=\"mr-sm-2\">Hour: </Label>\r\n                                        {/* <Input name=\"lunchhour\" value={currentTask?currentTask.lunchhour:''} onChange={this.onHandleChange}/> */}\r\n                                        <Input mask=\"9\" name=\"lunchhour\" value={currentTask?currentTask.lunchhour:''} className=\"form-control\" onChange={this.onHandleLunchChange}></Input>\r\n                                    </FormGroup>\r\n                                    <Row style={{float: \"right\"}}>\r\n                                        <Button type=\"button\" color=\"secondary\" className=\"mr-5\" onClick={this.saveLunch.bind(this)}>Save</Button>\r\n                                    </Row>\r\n                                </Form>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md=\"8\" style={{paddingLeft: \"20px\"}}>\r\n                        <Card className=\"mb-5\">\r\n                            <CardHeader>\r\n                                Preview Working Today\r\n                                <div className=\"btn-actions-pane-right\">\r\n                                {/* <Button type=\"button\" color=\"default\" onClick={this.loadAllWork.bind(this)}>load</Button> */}\r\n                                <Button outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={this.showSendConfirmModal.bind(this)} style={{marginRight:\"15px\"}}><i className=\"lnr-location\"> Send</i></Button> \r\n                                </div>\r\n                            </CardHeader>\r\n                            <CardBody>\r\n                                <ReactTable\r\n                                    data={workList}\r\n                                    columns={columns}\r\n                                    defaultPageSize={10}\r\n                                    className=\"-striped -highlight\"\r\n                                />\r\n                            </CardBody>\r\n                        </Card>\r\n                        <Card className=\"main-card mb-3\" style={{display: 'none'}}>\r\n                            <CardHeader className = \"text-right\">\r\n                            <i className=\"lnr-user\"> </i>\r\n                                Sign Document\r\n                            <div className=\"btn-actions-pane-right\">\r\n                                {/* <Button outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={this.uploadDoc.bind(this)} style={{marginRight:\"15px\"}}><i className=\"lnr-location\"> Send</i></Button> */}\r\n                                {/* <Button type=\"button\" color=\"secondary\" onClick={this.loadPDF.bind(this)}>Create PDF</Button> */}\r\n                            </div>\r\n                            </CardHeader>\r\n                            <CardBody className=\"text-center\">\r\n                                {loadURL !== '' ? \r\n                                    <iframe src={loadURL} frameBorder=\"1\"></iframe>\r\n                                : ''}\r\n                            {/* <SignContainer> */}\r\n                            {/* <div className=\"text-center\">\r\n                                <SignatureCanvas\r\n                                    penColor=\"black\"\r\n                                    ref={ref => {\r\n                                        this.sigPad = ref;\r\n                                    }}\r\n                                    canvasProps={{width: 400, height: 80, className: 'sigCanvas'}}\r\n                                />\r\n                            </div> */}\r\n                                <div style={{marginTop:\"50px\", textAlign:\"center\"}}>\r\n                                    {/* <Button outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={ this.clear}><i className=\"lnr-trash\"></i></Button>\r\n                                    <Button outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={this.trim} style={{marginLeft:\"15px\"}}><i className=\"lnr-pencil\"></i></Button> */}\r\n                                    {/* {this.state.signed && */}\r\n                                    {/* } */}\r\n                                    </div>\r\n                                {/* </SignContainer> */}\r\n                            </CardBody>\r\n                        </Card>\r\n                    \r\n                        \r\n                    </Col>\r\n                </Row>\r\n               <Modal isOpen={editModal} toggle={this.editToggle}>\r\n                    <ModalHeader> Edit Work</ModalHeader>\r\n                    <ModalBody>\r\n                    {selectedWork &&\r\n                        <Form>\r\n                        {selectedWork.starttime && \r\n                            <FormGroup className=\"mb-2 mr-sm-2 \">\r\n                                <Label className=\"mr-sm-2\">Start Time: </Label>\r\n                                <Input name=\"starttime\" placeholder=\"12:59 am\" value={selectedWork && selectedWork.starttime ? selectedWork.starttime : ''} onChange={this.onHandleWorkChange}/>\r\n                            </FormGroup>\r\n                        }\r\n                        {selectedWork.endtime && \r\n                            <FormGroup className=\"mb-2 mr-sm-2 \">\r\n                                <Label className=\"mr-sm-2\">End Time: </Label>\r\n                                <Input name=\"endtime\" placeholder=\"12:59 am\" value={selectedWork && selectedWork.endtime ? selectedWork.endtime : ''} onChange={this.onHandleWorkChange}/>\r\n                            </FormGroup>\r\n                        \r\n                        }\r\n                            {selectedWork.lunchtime && \r\n                            <FormGroup className=\"mb-2 mr-sm-2 \">\r\n                                <Label className=\"mr-sm-2\">Lunch Time: </Label>\r\n                                <Input name=\"lunchtime\" placeholder=\"12:59 am\" value={selectedWork && selectedWork.lunchtime ? selectedWork.lunchtime : ''} onChange={this.onHandleWorkChange}/>\r\n                            </FormGroup>\r\n                            }\r\n                            {selectedWork.hour && \r\n                            <FormGroup className=\"mb-2 mr-sm-2 \">\r\n                                <Label className=\"mr-sm-2\">Hour: </Label>\r\n                                <Input name=\"hour\" value={selectedWork && selectedWork.hour ? selectedWork.hour : ''} className=\"form-control\" onChange={this.onHandleWorkChange}></Input>\r\n                            </FormGroup>\r\n    }\r\n                            {selectedWork.notes && \r\n                            <FormGroup>\r\n                                <Label >Notes: </Label>\r\n                                <Input name=\"notes\" className=\"mb-2 mr-sm-2 \" value={selectedWork && selectedWork.notes ? selectedWork.notes : ''} onChange={this.onHandleWorkChange}></Input>\r\n                            </FormGroup>\r\n                            }\r\n                            <Row style={{float: \"right\"}}>\r\n                            <Button type=\"button\" color=\"secondary\" className=\"mr-5\" onClick={this.editWork.bind(this)}>Save</Button>\r\n                            </Row>\r\n                        </Form>\r\n                    \r\n                    }</ModalBody>\r\n               </Modal>\r\n               <Modal isOpen={deleteModal} toggle={this.deleteToggle}>\r\n                    <ModalHeader>Delete Confirm</ModalHeader>\r\n                    <ModalBody>Do you want to delete this work history?</ModalBody>\r\n                    <ModalFooter>\r\n                        <Button  outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={this.deleteToggle}>Cancel</Button>\r\n                        <Button color=\"secondary\" onClick={this.deleteWork}>Confirm</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n               <Modal isOpen={sendModal} toggle={this.sendToggle}>\r\n                    <ModalHeader>Send Confirm</ModalHeader>\r\n                    <ModalBody>You can send only once per day. Are you sure you send this work?</ModalBody>\r\n                    <ModalFooter>\r\n                        <Button  outline className=\"btn-shadow btn-dashed\" color=\"secondary\" onClick={this.sendToggle}>Cancel</Button>\r\n                        <Button color=\"secondary\" onClick={this.loadPDF.bind(this)}>Confirm</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { loggingIn } = state.authentication;\r\n    return {\r\n        loggingIn\r\n    };\r\n}\r\n\r\nconst connectedTaskPage = connect(mapStateToProps)(TaskPage);\r\nexport { connectedTaskPage as TaskPage }; ","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Row, Col, Card, Button} from 'reactstrap'\r\nimport styled from 'styled-components'\r\nimport bg1 from '../../assets/utils/images/company/11.jpg'\r\nconst Box = styled.div`\r\n    padding: 100px 200px;\r\n`;\r\n\r\nexport default class InstructionPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Card style={{minHeight: 500}}>\r\n                    <Box>\r\n                        <Row>\r\n                            <Col md={12} >\r\n                                <div className=\"text-center\">\r\n                                    <h4>Register Company</h4>\r\n                                </div>\r\n                            </Col>\r\n                            <Col md={12} style={{marginTop: 50}}>\r\n                                <Col md={4} style={{margin: 'auto'}}>\r\n                                    <ul>\r\n                                        <li>How to get all the contractors and save it to the website</li>\r\n                                        <li>How to get all the tasks and save it to the website</li>\r\n                                        <li>General information on how to use the system</li>\r\n                                    </ul>\r\n                                </Col >\r\n                            </Col>\r\n                            <Col md={12} className=\"text-center\">\r\n                                <img src={bg1} width=\"200px\"/>\r\n                            </Col>\r\n                            \r\n                            <Col md={12} style={{textAlign: 'center', marginTop: 50}}>\r\n                                <Link to=\"/company/loaddata\">\r\n                                    <Button type=\"primary\">LOAD</Button>\r\n                                </Link>\r\n                            </Col>\r\n                        </Row>\r\n                    </Box>\r\n                </Card>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n// const connectedInstructionPage = connect()(InstructionPage);\r\n// export { connectedInstructionPage as InstructionPage }; ","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {Row, Button, Col, Card} from 'reactstrap';\r\nimport styled from 'styled-components';\r\nimport FileInput from '../../components/FileInput';\r\nimport bg1 from '../../assets/utils/images/company/11.jpg';\r\nconst InputBox = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-direction: row;\r\n    margin-top: 20px;\r\n    width: 100%;\r\n    padding: 0px 350px;\r\n`;\r\n\r\nconst Box = styled.div`\r\n    padding: 100px 200px;\r\n`;\r\n\r\nexport default class LoadDataPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Card style={{minHeight: 500}}>\r\n                    <Box>\r\n                        <Row>\r\n                            <Col md={12} >\r\n                                <div className=\"text-center\">\r\n                                    <h4>Register Company</h4>\r\n                                </div>\r\n                            </Col>\r\n                            <Col md={12} style={{marginTop: 50}}>\r\n                                <Col md={4} style={{margin: 'auto'}}>\r\n                                    <ul>\r\n                                        <li>How to get all the contractors and save it to the website</li>\r\n                                        <li>How to get all the tasks and save it to the website</li>\r\n                                        <li>General information on how to use the system</li>\r\n                                    </ul>\r\n                                </Col >\r\n                            </Col>\r\n                            <Col md={12} className=\"text-center\">\r\n                                <img src={bg1} width=\"200px\"/>\r\n                            </Col>\r\n                            \r\n                                <InputBox>\r\n                                    <Col md={6}>\r\n                                        <i className=\"lnr lnr-book\" /> Add Contractors\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <FileInput api='/admin/loaduserfromtext'/>\r\n                                    </Col>\r\n                                </InputBox>\r\n                                <InputBox>\r\n                                    <Col md={6}>\r\n                                        <i className=\"lnr lnr-book\" /> Add Tasks\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <FileInput api='/admin/loadtaskfromtext'/>\r\n                                        \r\n                                    </Col>\r\n                                </InputBox>\r\n                                <InputBox>\r\n                                    <Col md={6}>\r\n                                        <i className=\"lnr lnr-book\" /> Add Material Safety Data Sheet\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <FileInput api='/admin/uploadmsds'/>\r\n                                    </Col>\r\n                                </InputBox>\r\n                        </Row>\r\n                        <Col md={12} style={{textAlign: 'center', marginTop: 20}}>\r\n                            <p>Have you completed all the above steps. Now it’s time to register your company. Click the below link to register your company.</p>\r\n                        </Col>\r\n                        <Col md={12} style={{textAlign: 'center', marginTop: 50}}>\r\n                            <Link to=\"/register\">\r\n                                <Button type=\"primary\">REGISTER</Button>\r\n                            </Link>\r\n                        </Col>\r\n                    </Box>\r\n                </Card>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n// const connectedLoadDataPage = connect()(LoadDataPage);\r\n// export { connectedLoadDataPage as LoadDataPage }; \r\n\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => (\r\n        window.localStorage.getItem('user')\r\n            ? <Component {...props} />\r\n            : <Redirect to={{pathname: '/', state: { from: props.location } }} />\r\n    )} />\r\n)\r\n\r\nexport default PrivateRoute","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst InviteRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => (\r\n        window.localStorage.getItem('user')\r\n            ? <Component {...props} />\r\n            : <Redirect to={{pathname: '/404', state: { from: props.location } }} />\r\n    )} />\r\n)\r\n\r\nexport default InviteRoute","import React, {Component} from \"react\"\r\n        \r\nclass EmptyPage extends Component {\r\n    render () {\r\n        return (\r\n\r\n            <h2>Not Found Error Page</h2>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default EmptyPage","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport Pages from '../container';\r\nimport { WelcomePage } from '../container/WelcomePage';\r\nimport { InvitePage, LoginPage, RegisterPage } from '../container/Auth';\r\nimport { TaskPage } from '../container/TaskPage';\r\nimport { InstructionPage, LoadDataPage } from '../container/CompanyRegister';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport InviteRoute from './InviteRoute';\r\nimport EmptyPage from '../container/404';\r\n\r\nexport default function MainRoutes() {\r\n  return (\r\n    \r\n        <Switch>\r\n          <Route exact path=\"/\" component={WelcomePage} />\r\n          <PrivateRoute path=\"/dashboard\" component={Pages} />\r\n          <InviteRoute path=\"/contractor/task\" component={TaskPage} />\r\n          <Route path=\"/login\" component={LoginPage} />\r\n          <Route path=\"/contractor/invite/*\" component={InvitePage} />\r\n          <InviteRoute path=\"/contractor/invite\" component={InvitePage} />\r\n          <InviteRoute path=\"/contractor\" component={InvitePage} />\r\n          <Route path=\"/company/instruction\" component={InstructionPage} />\r\n          <Route path=\"/company/loaddata\" component={LoadDataPage} />\r\n          <Route path=\"/register\" component={RegisterPage} />\r\n          <Route path=\"/404\" component={EmptyPage} />\r\n        </Switch>\r\n      \r\n  );\r\n}","import React from 'react';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport MainRoutes from './routes/MainRoutes';\r\nimport PrivateRoutes from './routes/PrivateRoute';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      // <PrivateRoutes>\r\n        <BrowserRouter >\r\n          <MainRoutes />\r\n        </BrowserRouter>\r\n      //  </PrivateRoutes>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import { userConstants } from '../constants';\r\n\r\nlet user = JSON.parse(localStorage.getItem('user'));\r\nconst initialState = user ? { loggedIn: true, user } : {};\r\n\r\nexport default function authentication(state = initialState, action) {\r\n    switch (action.type) {\r\n        case userConstants.LOGIN_REQUEST:\r\n            return {\r\n                loggingIn: true,\r\n                user: action.user\r\n            };\r\n        case userConstants.LOGIN_SUCCESS:\r\n            return {\r\n                loggedIn: true,\r\n                user: action.user\r\n            };\r\n        case userConstants.LOGIN_FAILURE:\r\n            return {};\r\n        case userConstants.LOGOUT:\r\n            return {};\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport {authentication, registration} from '../container/Auth/reducers';\r\n\r\nconst rootReducer = combineReducers({\r\n    authentication,\r\n    registration,\r\n});\r\n\r\nexport default rootReducer;","import { userConstants } from '../constants';\r\n\r\nexport default function registration(state = {}, action) {\r\n  switch (action.type) {\r\n    case userConstants.REGISTER_REQUEST:\r\n      return { registering: true };\r\n    case userConstants.REGISTER_SUCCESS:\r\n      return {};\r\n    case userConstants.REGISTER_FAILURE:\r\n      return {};\r\n    default:\r\n      return state\r\n  }\r\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport rootReducer from './reducer';\r\n\r\nexport const store = createStore(\r\n    rootReducer, \r\n    applyMiddleware(\r\n        thunkMiddleware,\r\n    )\r\n);\r\n\r\n// export default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/index.css';\r\nimport './assets/base.scss';\r\nimport App from './App';\r\n\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './helpers/store';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}